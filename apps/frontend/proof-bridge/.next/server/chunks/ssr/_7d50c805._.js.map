{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/frontend/proof-bridge/app/perfectlynineties_2022dd5f.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"perfectlynineties_2022dd5f-module__Vww5XG__className\",\n  \"variable\": \"perfectlynineties_2022dd5f-module__Vww5XG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/app/perfectlynineties_2022dd5f.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/local/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22%22,%22arguments%22:[{%22src%22:[{%22path%22:%22./fonts/perfectly-nineties-black.otf%22},{%22path%22:%22./fonts/perfectly-nineties-regular.otf%22,%22weight%22:%22400%22}],%22variable%22:%22--font-perfectly-nineties%22}],%22variableName%22:%22perfectlyNineties%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'perfectlyNineties', 'perfectlyNineties Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,+LAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,+LAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,+LAAS,CAAC,QAAQ;AAC1C;uCAEe","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/frontend/proof-bridge/app/pixter_bc5295d2.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"pixter_bc5295d2-module__UYzyaq__className\",\n  \"variable\": \"pixter_bc5295d2-module__UYzyaq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/app/pixter_bc5295d2.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/local/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22%22,%22arguments%22:[{%22src%22:[{%22path%22:%22./fonts/Pixter-Display-Bold.ttf%22,%22weight%22:%22600%22},{%22path%22:%22./fonts/Pixter-Display.ttf%22}],%22variable%22:%22--font-pixter-display%22}],%22variableName%22:%22pixter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'pixter', 'pixter Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,oLAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,oLAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,oLAAS,CAAC,QAAQ;AAC1C;uCAEe","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/frontend/proof-bridge/app/sequel_4a8c1c51.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"sequel_4a8c1c51-module__KPBQMa__className\",\n  \"variable\": \"sequel_4a8c1c51-module__KPBQMa__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/app/sequel_4a8c1c51.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/local/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22%22,%22arguments%22:[{%22src%22:[{%22path%22:%22./fonts/Sequel-Sans-Book-Disp.ttf%22}],%22variable%22:%22--font-sequel-sans%22}],%22variableName%22:%22sequel%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'sequel', 'sequel Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,oLAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,oLAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,oLAAS,CAAC,QAAQ;AAC1C;uCAEe","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/shared/AntConfigProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AntConfigProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AntConfigProvider() from the server but AntConfigProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/shared/AntConfigProvider.tsx <module evaluation>\",\n    \"AntConfigProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/shared/AntConfigProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AntConfigProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AntConfigProvider() from the server but AntConfigProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/shared/AntConfigProvider.tsx\",\n    \"AntConfigProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/shared/SmoothScroller.tsx"],"sourcesContent":["import ReactLenis from \"lenis/react\"\r\nimport React from \"react\"\r\n\r\nexport const SmoothScroll = ({ children }: { children: React.ReactNode }) => {\r\n  return (\r\n    <>\r\n      <ReactLenis root />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAGO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;IACtE,qBACE;;0BACE,6WAAC,oOAAU;gBAAC,IAAI;;;;;;YACf;;;AAGP","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/providers/TanstackProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TanstackQueryProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TanstackQueryProvider() from the server but TanstackQueryProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/providers/TanstackProvider.tsx <module evaluation>\",\n    \"TanstackQueryProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,wBAAwB,IAAA,uYAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,sGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/providers/TanstackProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TanstackQueryProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TanstackQueryProvider() from the server but TanstackQueryProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/providers/TanstackProvider.tsx\",\n    \"TanstackQueryProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,wBAAwB,IAAA,uYAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,kFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/providers/Wagmi.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Wagmi = registerClientReference(\n    function() { throw new Error(\"Attempted to call Wagmi() from the server but Wagmi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/providers/Wagmi.tsx <module evaluation>\",\n    \"Wagmi\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,2FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/providers/Wagmi.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Wagmi = registerClientReference(\n    function() { throw new Error(\"Attempted to call Wagmi() from the server but Wagmi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/providers/Wagmi.tsx\",\n    \"Wagmi\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/providers/RainbowKit.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const RainbowKit = registerClientReference(\n    function() { throw new Error(\"Attempted to call RainbowKit() from the server but RainbowKit is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/providers/RainbowKit.tsx <module evaluation>\",\n    \"RainbowKit\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,gGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/providers/RainbowKit.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const RainbowKit = registerClientReference(\n    function() { throw new Error(\"Attempted to call RainbowKit() from the server but RainbowKit is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/providers/RainbowKit.tsx\",\n    \"RainbowKit\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/ui/sonner.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/ui/sonner.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,uYAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,qFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/components/ui/sonner.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/proof-bridge/components/ui/sonner.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,uYAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,iEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/apps/frontend/proof-bridge/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\"\r\nimport localFont from \"next/font/local\"\r\nimport \"./globals.css\"\r\nimport \"@rainbow-me/rainbowkit/styles.css\"\r\nimport { AntConfigProvider } from \"@/components/shared/AntConfigProvider\"\r\nimport { SmoothScroll } from \"@/components/shared/SmoothScroller\"\r\nimport { TanstackQueryProvider } from \"@/components/providers/TanstackProvider\"\r\nimport { Wagmi } from \"@/components/providers/Wagmi\"\r\nimport { RainbowKit } from \"@/components/providers/RainbowKit\"\r\nimport { Toaster } from \"@/components/ui/sonner\"\r\n\r\nconst perfectlyNineties = localFont({\r\n  src: [\r\n    { path: \"./fonts/perfectly-nineties-black.otf\" },\r\n    { path: \"./fonts/perfectly-nineties-regular.otf\", weight: \"400\" },\r\n  ],\r\n  variable: \"--font-perfectly-nineties\",\r\n})\r\n\r\nconst pixter = localFont({\r\n  src: [\r\n    { path: \"./fonts/Pixter-Display-Bold.ttf\", weight: \"600\" },\r\n    { path: \"./fonts/Pixter-Display.ttf\" },\r\n  ],\r\n  variable: \"--font-pixter-display\",\r\n})\r\n\r\nconst sequel = localFont({\r\n  src: [{ path: \"./fonts/Sequel-Sans-Book-Disp.ttf\" }],\r\n  variable: \"--font-sequel-sans\",\r\n})\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Create Next App\",\r\n  description: \"Generated by create next app\",\r\n}\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode\r\n}>) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <meta name=\"theme-color\" content=\"#27330f\"></meta>\r\n      <body\r\n        className={`${pixter.variable} ${sequel.variable} ${sequel.className} ${perfectlyNineties.variable} tracking-wider antialiased`}\r\n      >\r\n        <Wagmi>\r\n          <TanstackQueryProvider>\r\n            <RainbowKit>\r\n              <AntConfigProvider>\r\n                <SmoothScroll>{children}</SmoothScroll>\r\n              </AntConfigProvider>\r\n              <Toaster />\r\n            </RainbowKit>\r\n          </TanstackQueryProvider>\r\n        </Wagmi>\r\n      </body>\r\n    </html>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAuBO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,6WAAC;QAAK,MAAK;;0BACT,6WAAC;gBAAK,MAAK;gBAAc,SAAQ;;;;;;0BACjC,6WAAC;gBACC,WAAW,GAAG,wKAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,wKAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,wKAAM,CAAC,SAAS,CAAC,CAAC,EAAE,mLAAiB,CAAC,QAAQ,CAAC,2BAA2B,CAAC;0BAE/H,cAAA,6WAAC,iLAAK;8BACJ,cAAA,6WAAC,4MAAqB;kCACpB,cAAA,6WAAC,2LAAU;;8CACT,6WAAC,sMAAiB;8CAChB,cAAA,6WAAC,8LAAY;kDAAE;;;;;;;;;;;8CAEjB,6WAAC,6KAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOtB","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/node_modules/.pnpm/next%4015.5.2_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,uMACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/node_modules/.pnpm/lenis%401.3.11_react%4019.1.0/node_modules/lenis/dist/lenis-react.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Lenis = registerClientReference(\n    function() { throw new Error(\"Attempted to call Lenis() from the server but Lenis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs <module evaluation>\",\n    \"Lenis\",\n);\nexport const LenisContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call LenisContext() from the server but LenisContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs <module evaluation>\",\n    \"LenisContext\",\n);\nexport const ReactLenis = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReactLenis() from the server but ReactLenis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs <module evaluation>\",\n    \"ReactLenis\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs <module evaluation>\",\n    \"default\",\n);\nexport const useLenis = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLenis() from the server but useLenis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs <module evaluation>\",\n    \"useLenis\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,sHACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sHACA;AAEG,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,sHACA;uCAEW,IAAA,uYAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAwV,GACrX,sHACA;AAEG,MAAM,WAAW,IAAA,uYAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,sHACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/node_modules/.pnpm/lenis%401.3.11_react%4019.1.0/node_modules/lenis/dist/lenis-react.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Lenis = registerClientReference(\n    function() { throw new Error(\"Attempted to call Lenis() from the server but Lenis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs\",\n    \"Lenis\",\n);\nexport const LenisContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call LenisContext() from the server but LenisContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs\",\n    \"LenisContext\",\n);\nexport const ReactLenis = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReactLenis() from the server but ReactLenis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs\",\n    \"ReactLenis\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs\",\n    \"default\",\n);\nexport const useLenis = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLenis() from the server but useLenis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/lenis@1.3.11_react@19.1.0/node_modules/lenis/dist/lenis-react.mjs\",\n    \"useLenis\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,kGACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kGACA;AAEG,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,kGACA;uCAEW,IAAA,uYAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAoU,GACjW,kGACA;AAEG,MAAM,WAAW,IAAA,uYAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,kGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///C:/code_base/hackathons/ProofBridge/node_modules/.pnpm/lenis%401.3.11_react%4019.1.0/node_modules/lenis/packages/react/src/provider.tsx","file:///C:/code_base/hackathons/ProofBridge/node_modules/.pnpm/lenis%401.3.11_react%4019.1.0/node_modules/lenis/packages/react/src/store.ts","file:///C:/code_base/hackathons/ProofBridge/node_modules/.pnpm/lenis%401.3.11_react%4019.1.0/node_modules/lenis/packages/react/src/use-lenis.ts"],"sourcesContent":["import Lenis, { type ScrollCallback } from 'lenis'\r\nimport {\r\n  createContext,\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { Store } from './store'\r\nimport type { LenisContextValue, LenisProps, LenisRef } from './types'\r\n\r\nexport const LenisContext = createContext<LenisContextValue | null>(null)\r\n\r\n/**\r\n * The root store for the lenis context\r\n *\r\n * This store serves as a fallback for the context if it is not available\r\n * and allows us to use the global lenis instance above a provider\r\n */\r\nexport const rootLenisContextStore = new Store<LenisContextValue | null>(null)\r\n\r\n/**\r\n * React component to setup a Lenis instance\r\n */\r\nexport const ReactLenis = forwardRef<LenisRef, LenisProps>(\r\n  (\r\n    {\r\n      children,\r\n      root = false,\r\n      options = {},\r\n      autoRaf = true,\r\n      ...props\r\n    }: LenisProps,\r\n    ref\r\n  ) => {\r\n    const wrapperRef = useRef<HTMLDivElement>(null)\r\n    const contentRef = useRef<HTMLDivElement>(null)\r\n\r\n    const [lenis, setLenis] = useState<Lenis | undefined>(undefined)\r\n\r\n    // Setup ref\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        wrapper: wrapperRef.current,\r\n        content: contentRef.current,\r\n        lenis,\r\n      }),\r\n      [lenis]\r\n    )\r\n\r\n    // Setup lenis instance\r\n    useEffect(() => {\r\n      const lenis = new Lenis({\r\n        ...options,\r\n        ...(wrapperRef.current &&\r\n          contentRef.current && {\r\n            wrapper: wrapperRef.current!,\r\n            content: contentRef.current!,\r\n          }),\r\n        autoRaf: options?.autoRaf ?? autoRaf, // this is to avoid breaking the autoRaf prop if it's still used (require breaking change)\r\n      })\r\n\r\n      setLenis(lenis)\r\n\r\n      return () => {\r\n        lenis.destroy()\r\n        setLenis(undefined)\r\n      }\r\n    }, [root, JSON.stringify({ ...options, wrapper: null, content: null })])\r\n\r\n    // Handle callbacks\r\n    const callbacksRefs = useRef<\r\n      {\r\n        callback: ScrollCallback\r\n        priority: number\r\n      }[]\r\n    >([])\r\n\r\n    const addCallback: LenisContextValue['addCallback'] = useCallback(\r\n      (callback, priority) => {\r\n        callbacksRefs.current.push({ callback, priority })\r\n        callbacksRefs.current.sort((a, b) => a.priority - b.priority)\r\n      },\r\n      []\r\n    )\r\n\r\n    const removeCallback: LenisContextValue['removeCallback'] = useCallback(\r\n      (callback) => {\r\n        callbacksRefs.current = callbacksRefs.current.filter(\r\n          (cb) => cb.callback !== callback\r\n        )\r\n      },\r\n      []\r\n    )\r\n\r\n    // This makes sure to set the global context if the root is true\r\n    useEffect(() => {\r\n      if (root && lenis) {\r\n        rootLenisContextStore.set({ lenis, addCallback, removeCallback })\r\n\r\n        return () => rootLenisContextStore.set(null)\r\n      }\r\n    }, [root, lenis, addCallback, removeCallback])\r\n\r\n    // Setup callback listeners\r\n    useEffect(() => {\r\n      if (!lenis) return\r\n\r\n      const onScroll: ScrollCallback = (data) => {\r\n        for (let i = 0; i < callbacksRefs.current.length; i++) {\r\n          callbacksRefs.current[i]?.callback(data)\r\n        }\r\n      }\r\n\r\n      lenis.on('scroll', onScroll)\r\n\r\n      return () => {\r\n        lenis.off('scroll', onScroll)\r\n      }\r\n    }, [lenis])\r\n\r\n    if (!children) return null\r\n\r\n    return (\r\n      <LenisContext.Provider\r\n        value={{ lenis: lenis!, addCallback, removeCallback }}\r\n      >\r\n        {root && root !== 'asChild' ? (\r\n          children\r\n        ) : (\r\n          <div ref={wrapperRef} {...props}>\r\n            <div ref={contentRef}>{children}</div>\r\n          </div>\r\n        )}\r\n      </LenisContext.Provider>\r\n    )\r\n  }\r\n)\r\n","import { useEffect, useState } from 'react'\r\n\r\ntype Listener<S> = (state: S) => void\r\n\r\nexport class Store<S> {\r\n  private listeners: Listener<S>[] = []\r\n\r\n  constructor(private state: S) {}\r\n\r\n  set(state: S) {\r\n    this.state = state\r\n\r\n    for (let listener of this.listeners) {\r\n      listener(this.state)\r\n    }\r\n  }\r\n\r\n  subscribe(listener: Listener<S>) {\r\n    this.listeners = [...this.listeners, listener]\r\n    return () => {\r\n      this.listeners = this.listeners.filter((l) => l !== listener)\r\n    }\r\n  }\r\n\r\n  get() {\r\n    return this.state\r\n  }\r\n}\r\n\r\nexport function useStore<S>(store: Store<S>) {\r\n  const [state, setState] = useState(store.get())\r\n\r\n  useEffect(() => {\r\n    return store.subscribe((state) => setState(state))\r\n  }, [store])\r\n\r\n  return state\r\n}\r\n","import type { ScrollCallback } from 'lenis'\r\nimport { useContext, useEffect } from 'react'\r\nimport { LenisContext, rootLenisContextStore } from './provider'\r\nimport { useStore } from './store'\r\nimport type { LenisContextValue } from './types'\r\n\r\n// Fall back to an empty object if both context and store are not available\r\nconst fallbackContext: Partial<LenisContextValue> = {}\r\n\r\n/**\r\n * Hook to access the Lenis instance and its methods\r\n *\r\n * @example <caption>Scroll callback</caption>\r\n *          useLenis((lenis) => {\r\n *            if (lenis.isScrolling) {\r\n *              console.log('Scrolling...')\r\n *            }\r\n *\r\n *            if (lenis.progress === 1) {\r\n *              console.log('At the end!')\r\n *            }\r\n *          })\r\n *\r\n * @example <caption>Scroll callback with dependencies</caption>\r\n *          useLenis((lenis) => {\r\n *            if (lenis.isScrolling) {\r\n *              console.log('Scrolling...', someDependency)\r\n *            }\r\n *          }, [someDependency])\r\n * @example <caption>Scroll callback with priority</caption>\r\n *          useLenis((lenis) => {\r\n *            if (lenis.isScrolling) {\r\n *              console.log('Scrolling...')\r\n *            }\r\n *          }, [], 1)\r\n * @example <caption>Instance access</caption>\r\n *          const lenis = useLenis()\r\n *\r\n *          handleClick() {\r\n *            lenis.scrollTo(100, {\r\n *              lerp: 0.1,\r\n *              duration: 1,\r\n *              easing: (t) => t,\r\n *              onComplete: () => {\r\n *                console.log('Complete!')\r\n *              }\r\n *            })\r\n *          }\r\n */\r\nexport function useLenis(\r\n  callback?: ScrollCallback,\r\n  deps: any[] = [],\r\n  priority = 0\r\n) {\r\n  // Try to get the lenis instance from the context first\r\n  const localContext = useContext(LenisContext)\r\n  // Fall back to the root store if the context is not available\r\n  const rootContext = useStore(rootLenisContextStore)\r\n  // Fall back to the fallback context if all else fails\r\n  const currentContext = localContext ?? rootContext ?? fallbackContext\r\n\r\n  const { lenis, addCallback, removeCallback } = currentContext\r\n\r\n  useEffect(() => {\r\n    if (!callback || !addCallback || !removeCallback || !lenis) return\r\n\r\n    addCallback(callback, priority)\r\n    callback(lenis)\r\n\r\n    return () => {\r\n      removeCallback(callback)\r\n    }\r\n  }, [lenis, addCallback, removeCallback, priority, ...deps])\r\n\r\n  return lenis\r\n}\r\n"],"names":["useEffect","useState","state","useState","useEffect","lenis","useEffect","useEffect"],"mappings":"","debugId":null}}]
}