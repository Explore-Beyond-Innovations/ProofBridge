module.exports=[480385,a=>{"use strict";a.s(["getTransactionError",()=>e]);var b=a.i(548888),c=a.i(277552),d=a.i(958796);function e(a,{docsPath:e,...f}){let g=(()=>{let c=(0,d.getNodeError)(a,f);return c instanceof b.UnknownNodeError?a:c})();return new c.TransactionExecutionError(g,{docsPath:e,...f})}},935588,a=>{"use strict";a.s(["assertCurrentChain",()=>c]);var b=a.i(117416);function c({chain:a,currentChainId:c}){if(!a)throw new b.ChainNotFoundError;if(c!==a.id)throw new b.ChainMismatchError({chain:a,currentChainId:c})}},246238,a=>{"use strict";a.s(["sendTransaction",()=>q]);var b=a.i(968918),c=a.i(529501),d=a.i(755542),e=a.i(378220),f=a.i(935588),g=a.i(480385),h=a.i(441343),i=a.i(823861),j=a.i(659501),k=a.i(823869),l=a.i(806658),m=a.i(999400),n=a.i(994196),o=a.i(725321);let p=new k.LruMap(128);async function q(a,k){let{account:q=a.account,chain:r=a.chain,accessList:s,authorizationList:t,blobs:u,data:v,gas:w,gasPrice:x,maxFeePerBlobGas:y,maxFeePerGas:z,maxPriorityFeePerGas:A,nonce:B,type:C,value:D,...E}=k;if(void 0===q)throw new c.AccountNotFoundError({docsPath:"/docs/actions/wallet/sendTransaction"});let F=q?(0,b.parseAccount)(q):null;try{(0,l.assertRequest)(k);let b=await (async()=>k.to?k.to:null!==k.to&&t&&t.length>0?await (0,e.recoverAuthorizationAddress)({authorization:t[0]}).catch(()=>{throw new d.BaseError("`to` is required. Could not infer from `authorizationList`.")}):void 0)();if(F?.type==="json-rpc"||null===F){let c;null!==r&&(c=await (0,j.getAction)(a,m.getChainId,"getChainId")({}),(0,f.assertCurrentChain)({currentChainId:c,chain:r}));let d=a.chain?.formatters?.transactionRequest?.format,e=(d||i.formatTransactionRequest)({...(0,h.extract)(E,{format:d}),accessList:s,authorizationList:t,blobs:u,chainId:c,data:v,from:F?.address,gas:w,gasPrice:x,maxFeePerBlobGas:y,maxFeePerGas:z,maxPriorityFeePerGas:A,nonce:B,to:b,type:C,value:D}),g=p.get(a.uid);try{return await a.request({method:g?"wallet_sendTransaction":"eth_sendTransaction",params:[e]},{retryCount:0})}catch(b){if(!1===g)throw b;if("InvalidInputRpcError"===b.name||"InvalidParamsRpcError"===b.name||"MethodNotFoundRpcError"===b.name||"MethodNotSupportedRpcError"===b.name)return await a.request({method:"wallet_sendTransaction",params:[e]},{retryCount:0}).then(b=>(p.set(a.uid,!0),b)).catch(c=>{if("MethodNotFoundRpcError"===c.name||"MethodNotSupportedRpcError"===c.name)throw p.set(a.uid,!1),b;throw c});throw b}}if(F?.type==="local"){let c=await (0,j.getAction)(a,n.prepareTransactionRequest,"prepareTransactionRequest")({account:F,accessList:s,authorizationList:t,blobs:u,chain:r,data:v,gas:w,gasPrice:x,maxFeePerBlobGas:y,maxFeePerGas:z,maxPriorityFeePerGas:A,nonce:B,nonceManager:F.nonceManager,parameters:[...n.defaultParameters,"sidecars"],type:C,value:D,...E,to:b}),d=r?.serializers?.transaction,e=await F.signTransaction(c,{serializer:d});return await (0,j.getAction)(a,o.sendRawTransaction,"sendRawTransaction")({serializedTransaction:e})}if(F?.type==="smart")throw new c.AccountTypeNotSupportedError({metaMessages:["Consider using the `sendUserOperation` Action instead."],docsPath:"/docs/actions/bundler/sendUserOperation",type:"smart"});throw new c.AccountTypeNotSupportedError({docsPath:"/docs/actions/wallet/sendTransaction",type:F?.type})}catch(a){if(a instanceof c.AccountTypeNotSupportedError)throw a;throw(0,g.getTransactionError)(a,{...k,account:F,chain:k.chain||void 0})}}},59060,a=>{"use strict";function b(){for(var a,b,c=0,d="";c<arguments.length;)(a=arguments[c++])&&(b=function a(b){var c,d,e="";if("string"==typeof b||"number"==typeof b)e+=b;else if("object"==typeof b)if(Array.isArray(b))for(c=0;c<b.length;c++)b[c]&&(d=a(b[c]))&&(e&&(e+=" "),e+=d);else for(c in b)b[c]&&(e&&(e+=" "),e+=c);return e}(a))&&(d&&(d+=" "),d+=b);return d}a.s(["clsx",()=>b,"default",()=>c]);let c=b}];

//# sourceMappingURL=node_modules__pnpm_0410ea76._.js.map