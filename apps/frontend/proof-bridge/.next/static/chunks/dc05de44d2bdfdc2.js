(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,439010,e=>{"use strict";e.s(["AppKit",()=>ef,"createAppKit",()=>eE],439010),e.s(["createAppKit",()=>eE],803499);var t=e.i(898694),n=e.i(544059),r=e.i(927560),a=e.i(236213),o=e.i(641559),s=e.i(443229),i=e.i(735502),l=e.i(576638);let c={validateCaipAddress(e){var t;if((null==(t=e.split(":"))?void 0:t.length)!==3)throw Error("Invalid CAIP Address");return e},parseCaipAddress(e){let t=e.split(":");if(3!==t.length)throw Error("Invalid CAIP-10 address: ".concat(e));let[n,r,a]=t;if(!n||!r||!a)throw Error("Invalid CAIP-10 address: ".concat(e));return{chainNamespace:n,chainId:r,address:a}},parseCaipNetworkId(e){let t=e.split(":");if(2!==t.length)throw Error("Invalid CAIP-2 network id: ".concat(e));let[n,r]=t;if(!n||!r)throw Error("Invalid CAIP-2 network id: ".concat(e));return{chainNamespace:n,chainId:r}}};var d=e.i(390949),C=e.i(503222),p=e.i(834788),u=e.i(428052),h=e.i(867954),v=e.i(59466),N=e.i(164885),m=e.i(564632);let g={convertEVMChainIdToCoinType(e){if(e>=0x80000000)throw Error("Invalid chainId");return(0x80000000|e)>>>0}};var w=e.i(254842),A=e.i(485575),f=e.i(239433);let E=(0,N.proxy)({suggestions:[],loading:!1}),b=(0,A.withErrorBoundary)({state:E,subscribe:e=>(0,N.subscribe)(E,()=>e(E)),subscribeKey:(e,t)=>(0,m.subscribeKey)(E,e,t),async resolveName(e){try{return await u.BlockchainApiController.lookupEnsName(e)}catch(e){var t,n;throw Error((null==e||null==(n=e.reasons)||null==(t=n[0])?void 0:t.description)||"Error resolving name")}},async isNameRegistered(e){try{return await u.BlockchainApiController.lookupEnsName(e),!0}catch(e){return!1}},async getSuggestions(e){try{return E.loading=!0,E.suggestions=[],E.suggestions=(await u.BlockchainApiController.getEnsNameSuggestions(e)).suggestions.map(e=>({...e,name:e.name}))||[],E.suggestions}catch(e){throw Error(b.parseEnsApiError(e,"Error fetching name suggestions"))}finally{E.loading=!1}},async getNamesForAddress(e){try{if(!h.ChainController.state.activeCaipNetwork)return[];let t=w.StorageUtil.getEnsFromCacheForAddress(e);if(t)return t;let n=await u.BlockchainApiController.reverseLookupEnsName({address:e});return w.StorageUtil.updateEnsCache({address:e,ens:n,timestamp:Date.now()}),n}catch(e){throw Error(b.parseEnsApiError(e,"Error fetching names for address"))}},async registerName(e){let a=h.ChainController.state.activeCaipNetwork;if(!a)throw Error("Network not found");let o=t.AccountController.state.address,s=r.ConnectorController.getAuthConnector();if(!o||!s)throw Error("Address or auth connector not found");E.loading=!0;try{let r=JSON.stringify({name:e,attributes:{},timestamp:Math.floor(Date.now()/1e3)});f.RouterController.pushTransactionStack({onCancel(){f.RouterController.replace("RegisterAccountName")}});let s=await n.ConnectionController.signMessage(r);E.loading=!1;let i=a.id;if(!i)throw Error("Network not found");let l=g.convertEVMChainIdToCoinType(Number(i));await u.BlockchainApiController.registerEnsName({coinType:l,address:o,signature:s,message:r}),t.AccountController.setProfileName(e,a.chainNamespace),f.RouterController.replace("RegisterAccountNameSuccess")}catch(n){let t=b.parseEnsApiError(n,"Error registering name ".concat(e));throw f.RouterController.replace("RegisterAccountName"),Error(t)}finally{E.loading=!1}},validateName:e=>/^[a-zA-Z0-9-]{4,}$/u.test(e),parseEnsApiError(e,t){var n,r;return(null==e||null==(r=e.reasons)||null==(n=r[0])?void 0:n.description)||t}});var y=e.i(548879),I=e.i(449454);let O={id:"2b92315d-eab7-5bef-84fa-089a131333f5",name:"USD Coin",symbol:"USDC",networks:[{name:"ethereum-mainnet",display_name:"Ethereum",chain_id:"1",contract_address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},{name:"polygon-mainnet",display_name:"Polygon",chain_id:"137",contract_address:"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"}]},T={id:"USD",payment_method_limits:[{id:"card",min:"10.00",max:"7500.00"},{id:"ach_bank_account",min:"10.00",max:"25000.00"}]},k={providers:v.ONRAMP_PROVIDERS,selectedProvider:null,error:null,purchaseCurrency:O,paymentCurrency:T,purchaseCurrencies:[O],paymentCurrencies:[],quotesLoading:!1},U=(0,N.proxy)(k),_=(0,A.withErrorBoundary)({state:U,subscribe:e=>(0,N.subscribe)(U,()=>e(U)),subscribeKey:(e,t)=>(0,m.subscribeKey)(U,e,t),setSelectedProvider(e){if(e&&"meld"===e.name){var n;let r=h.ChainController.state.activeChain===i.ConstantsUtil.CHAIN.SOLANA?"SOL":"USDC",a=null!=(n=t.AccountController.state.address)?n:"",s=new URL(e.url);s.searchParams.append("publicKey",v.MELD_PUBLIC_KEY),s.searchParams.append("destinationCurrencyCode",r),s.searchParams.append("walletAddress",a),s.searchParams.append("externalCustomerId",o.OptionsController.state.projectId),U.selectedProvider={...e,url:s.toString()}}else U.selectedProvider=e},setOnrampProviders(e){Array.isArray(e)&&e.every(e=>"string"==typeof e)?U.providers=v.ONRAMP_PROVIDERS.filter(t=>e.includes(t.name)):U.providers=[]},setPurchaseCurrency(e){U.purchaseCurrency=e},setPaymentCurrency(e){U.paymentCurrency=e},setPurchaseAmount(e){_.state.purchaseAmount=e},setPaymentAmount(e){_.state.paymentAmount=e},async getAvailableCurrencies(){let e=await u.BlockchainApiController.getOnrampOptions();U.purchaseCurrencies=e.purchaseCurrencies,U.paymentCurrencies=e.paymentCurrencies,U.paymentCurrency=e.paymentCurrencies[0]||T,U.purchaseCurrency=e.purchaseCurrencies[0]||O,await C.ApiController.fetchCurrencyImages(e.paymentCurrencies.map(e=>e.id)),await C.ApiController.fetchTokenImages(e.purchaseCurrencies.map(e=>e.symbol))},async getQuote(){U.quotesLoading=!0;try{var e,t;let n=await u.BlockchainApiController.getOnrampQuote({purchaseCurrency:U.purchaseCurrency,paymentCurrency:U.paymentCurrency,amount:(null==(e=U.paymentAmount)?void 0:e.toString())||"0",network:null==(t=U.purchaseCurrency)?void 0:t.symbol});return U.quotesLoading=!1,U.purchaseAmount=Number(null==n?void 0:n.purchaseAmount.amount),n}catch(e){return U.error=e.message,U.quotesLoading=!1,null}finally{U.quotesLoading=!1}},resetState(){U.selectedProvider=null,U.error=null,U.purchaseCurrency=O,U.paymentCurrency=T,U.purchaseCurrencies=[O],U.paymentCurrencies=[],U.paymentAmount=void 0,U.purchaseAmount=void 0,U.quotesLoading=!1}});var R=e.i(624771),P=e.i(280554),S=e.i(916339),D=e.i(908175),L=e.i(884085);function M(e,t){return r.ConnectorController.getConnectorId(e)===t}e.i(643137),e.i(429892);var W=e.i(598570);e.i(210698);var F=e.i(335405),B=e.i(647264),x=e.i(386515),j=e.i(552130),K=e.i(150537);function H(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{key:n="fallback",name:r="Fallback",rank:a=!1,shouldThrow:o=q,retryCount:s,retryDelay:i}=t;return t=>{let{chain:l,pollingInterval:c=4e3,timeout:d,...C}=t,p=e,u=()=>{},h=(0,K.createTransport)({key:n,name:r,async request(e){let t,{method:n,params:r}=e,a=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,s=p[e]({...C,chain:l,retryCount:0,timeout:d});try{let e=await s.request({method:n,params:r});return u({method:n,params:r,response:e,transport:s,status:"success"}),e}catch(i){if(u({error:i,method:n,params:r,transport:s,status:"error"}),o(i)||e===p.length-1||(null!=t||(t=p.slice(e+1).some(e=>{let{include:t,exclude:r}=e({chain:l}).config.methods||{};return t?t.includes(n):!r||!r.includes(n)})),!t))throw i;return a(e+1)}};return a()},retryCount:s,retryDelay:i,type:"fallback"},{onResponse:e=>u=e,transports:p.map(e=>e({chain:l,retryCount:0}))});if(a){var v;let e="object"==typeof a?a:{};!function(e){let{chain:t,interval:n=4e3,onTransports:r,ping:a,sampleCount:o=10,timeout:s=1e3,transports:i,weights:l={}}=e,{stability:c=.7,latency:d=.3}=l,C=[],p=async()=>{let e=await Promise.all(i.map(async e=>{let n,r,o=e({chain:t,retryCount:0,timeout:s}),i=Date.now();try{await (a?a({transport:o}):o.request({method:"net_listening"})),r=1}catch(e){r=0}finally{n=Date.now()}return{latency:n-i,success:r}}));C.push(e),C.length>o&&C.shift();let l=Math.max(...C.map(e=>Math.max(...e.map(e=>{let{latency:t}=e;return t}))));r(i.map((e,t)=>{let n=C.map(e=>e[t].latency),r=n.reduce((e,t)=>e+t,0)/n.length,a=C.map(e=>e[t].success),o=a.reduce((e,t)=>e+t,0)/a.length;return 0===o?[0,t]:[d*(1-r/l)+c*o,t]}).sort((e,t)=>t[0]-e[0]).map(e=>{let[,t]=e;return i[t]})),await (0,j.wait)(n),p()};p()}({chain:l,interval:null!=(v=e.interval)?v:c,onTransports:e=>p=e,ping:e.ping,sampleCount:e.sampleCount,timeout:e.timeout,transports:p,weights:e.weights})}return h}}function q(e){return!!("code"in e&&"number"==typeof e.code&&(e.code===x.TransactionRejectedRpcError.code||e.code===x.UserRejectedRequestError.code||B.ExecutionRevertedError.nodeMessage.test(e.message)||5e3===e.code))}var V=e.i(165347),z=e.i(976582);let J={ConnectorExplorerIds:{[i.ConstantsUtil.CONNECTOR_ID.COINBASE]:"fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa",[i.ConstantsUtil.CONNECTOR_ID.COINBASE_SDK]:"fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa",[i.ConstantsUtil.CONNECTOR_ID.SAFE]:"225affb176778569276e484e1b92637ad061b01e13a048b35a9d280c3b58970f",[i.ConstantsUtil.CONNECTOR_ID.LEDGER]:"19177a98252e07ddfc9af2083ba8e07ef627cb6103467ffebb3f8f4205fd7927",[i.ConstantsUtil.CONNECTOR_ID.OKX]:"971e689d0a5be527bac79629b4ee9b925e82208e5168b733496a09c0faed0709",[z.ConstantsUtil.METMASK_CONNECTOR_NAME]:"c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96",[z.ConstantsUtil.TRUST_CONNECTOR_NAME]:"4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0",[z.ConstantsUtil.SOLFLARE_CONNECTOR_NAME]:"1ca0bdd4747578705b1939af023d120677c64fe6ca76add81fda36e350605e79",[z.ConstantsUtil.PHANTOM_CONNECTOR_NAME]:"a797aa35c0fadbfc1a53e7f675162ed5226968b44a19ee3d24385c64d1d3c393",[z.ConstantsUtil.COIN98_CONNECTOR_NAME]:"2a3c89040ac3b723a1972a33a125b1db11e258a6975d3a61252cd64e6ea5ea01",[z.ConstantsUtil.MAGIC_EDEN_CONNECTOR_NAME]:"8b830a2b724a9c3fbab63af6f55ed29c9dfa8a55e732dc88c80a196a2ba136c6",[z.ConstantsUtil.BACKPACK_CONNECTOR_NAME]:"2bd8c14e035c2d48f184aaa168559e86b0e3433228d3c4075900a221785019b0",[z.ConstantsUtil.BITGET_CONNECTOR_NAME]:"38f5d18bd8522c244bdd70cb4a68e0e718865155811c043f052fb9f1c51de662",[z.ConstantsUtil.FRONTIER_CONNECTOR_NAME]:"85db431492aa2e8672e93f4ea7acf10c88b97b867b0d373107af63dc4880f041",[z.ConstantsUtil.XVERSE_CONNECTOR_NAME]:"2a87d74ae02e10bdd1f51f7ce6c4e1cc53cd5f2c0b6b5ad0d7b3007d2b13de7b",[z.ConstantsUtil.LEATHER_CONNECTOR_NAME]:"483afe1df1df63daf313109971ff3ef8356ddf1cc4e45877d205eee0b7893a13"},NetworkImageIds:{1:"ba0ba0cd-17c6-4806-ad93-f9d174f17900",42161:"3bff954d-5cb0-47a0-9a23-d20192e74600",43114:"30c46e53-e989-45fb-4549-be3bd4eb3b00",56:"93564157-2e8e-4ce7-81df-b264dbee9b00",250:"06b26297-fe0c-4733-5d6b-ffa5498aac00",10:"ab9c186a-c52f-464b-2906-ca59d760a400",137:"41d04d42-da3b-4453-8506-668cc0727900",5e3:"e86fae9b-b770-4eea-e520-150e12c81100",295:"6a97d510-cac8-4e58-c7ce-e8681b044c00",0xaa36a7:"e909ea0a-f92a-4512-c8fc-748044ea6800",84532:"a18a7ecd-e307-4360-4746-283182228e00",1301:"4eeea7ef-0014-4649-5d1d-07271a80f600",130:"2257980a-3463-48c6-cbac-a42d2a956e00",10143:"0a728e83-bacb-46db-7844-948f05434900",100:"02b53f6a-e3d4-479e-1cb4-21178987d100",9001:"f926ff41-260d-4028-635e-91913fc28e00",324:"b310f07f-4ef7-49f3-7073-2a0a39685800",314:"5a73b3dd-af74-424e-cae0-0de859ee9400",4689:"34e68754-e536-40da-c153-6ef2e7188a00",1088:"3897a66d-40b9-4833-162f-a2c90531c900",1284:"161038da-44ae-4ec7-1208-0ea569454b00",1285:"f1d73bb6-5450-4e18-38f7-fb6484264a00",7777777:"845c60df-d429-4991-e687-91ae45791600",42220:"ab781bbc-ccc6-418d-d32d-789b15da1f00",8453:"7289c336-3981-4081-c5f4-efc26ac64a00",0x4e454152:"3ff73439-a619-4894-9262-4470c773a100",2020:"b8101fc0-9c19-4b6f-ec65-f6dfff106e00",2021:"b8101fc0-9c19-4b6f-ec65-f6dfff106e00",80094:"e329c2c9-59b0-4a02-83e4-212ff3779900",2741:"fc2427d1-5af9-4a9c-8da5-6f94627cd900","5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp":"a1b58899-f671-4276-6a5e-56ca5bd59700","4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z":"a1b58899-f671-4276-6a5e-56ca5bd59700",EtWTRABZaYq6iMfeYKouRu166VU2xqa1:"a1b58899-f671-4276-6a5e-56ca5bd59700","000000000019d6689c085ae165831e93":"0b4838db-0161-4ffe-022d-532bf03dba00","000000000933ea01ad0ee984209779ba":"39354064-d79b-420b-065d-f980c4b78200"},ConnectorImageIds:{[i.ConstantsUtil.CONNECTOR_ID.COINBASE]:"0c2840c3-5b04-4c44-9661-fbd4b49e1800",[i.ConstantsUtil.CONNECTOR_ID.COINBASE_SDK]:"0c2840c3-5b04-4c44-9661-fbd4b49e1800",[i.ConstantsUtil.CONNECTOR_ID.SAFE]:"461db637-8616-43ce-035a-d89b8a1d5800",[i.ConstantsUtil.CONNECTOR_ID.LEDGER]:"54a1aa77-d202-4f8d-0fb2-5d2bb6db0300",[i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT]:"ef1a1fcf-7fe8-4d69-bd6d-fda1345b4400",[i.ConstantsUtil.CONNECTOR_ID.INJECTED]:"07ba87ed-43aa-4adf-4540-9e6a2b9cae00"},ConnectorNamesMap:{[i.ConstantsUtil.CONNECTOR_ID.INJECTED]:"Browser Wallet",[i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT]:"WalletConnect",[i.ConstantsUtil.CONNECTOR_ID.COINBASE]:"Coinbase",[i.ConstantsUtil.CONNECTOR_ID.COINBASE_SDK]:"Coinbase",[i.ConstantsUtil.CONNECTOR_ID.LEDGER]:"Ledger",[i.ConstantsUtil.CONNECTOR_ID.SAFE]:"Safe"},ConnectorTypesMap:{[i.ConstantsUtil.CONNECTOR_ID.INJECTED]:"INJECTED",[i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT]:"WALLET_CONNECT",[i.ConstantsUtil.CONNECTOR_ID.EIP6963]:"ANNOUNCED",[i.ConstantsUtil.CONNECTOR_ID.AUTH]:"AUTH"},WalletConnectRpcChainIds:[1,5,0xaa36a7,10,420,42161,421613,137,80001,42220,0x4e454152,0x4e454153,56,97,43114,43113,100,8453,84531,7777777,999,324,280]};function Y(e,t){let n=new URL("https://rpc.walletconnect.org/v1/");return n.searchParams.set("chainId",e),n.searchParams.set("projectId",t),n.toString()}let G=["near:mainnet","solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp","eip155:1101","eip155:56","eip155:42161","eip155:7777777","eip155:59144","eip155:324","solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1","eip155:5000","solana:4sgjmw1sunhzsxgspuhpqldx6wiyjntz","eip155:80084","eip155:5003","eip155:100","eip155:8453","eip155:42220","eip155:1313161555","eip155:17000","eip155:1","eip155:300","eip155:1313161554","eip155:1329","eip155:84532","eip155:421614","eip155:11155111","eip155:8217","eip155:43114","solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z","eip155:999999999","eip155:11155420","eip155:80002","eip155:97","eip155:43113","eip155:137","eip155:10","eip155:1301","bip122:000000000019d6689c085ae165831e93","bip122:000000000933ea01ad0ee984209779ba"],Z={extendRpcUrlWithProjectId(e,t){let n=!1;try{n="rpc.walletconnect.org"===new URL(e).host}catch(e){n=!1}if(n){let n=new URL(e);return n.searchParams.has("projectId")||n.searchParams.set("projectId",t),n.toString()}return e},isCaipNetwork:e=>"chainNamespace"in e&&"caipNetworkId"in e,getChainNamespace(e){return this.isCaipNetwork(e)?e.chainNamespace:i.ConstantsUtil.CHAIN.EVM},getCaipNetworkId(e){return this.isCaipNetwork(e)?e.caipNetworkId:"".concat(i.ConstantsUtil.CHAIN.EVM,":").concat(e.id)},getDefaultRpcUrl(e,t,n){var r,a,o;let s=null==(o=e.rpcUrls)||null==(a=o.default)||null==(r=a.http)?void 0:r[0];return G.includes(t)?Y(t,n):s||""},extendCaipNetwork(e,t){var n,r,a,o,s;let{customNetworkImageUrls:i,projectId:l,customRpcUrls:c}=t,d=this.getChainNamespace(e),C=this.getCaipNetworkId(e),p=null==(n=e.rpcUrls.default.http)?void 0:n[0],u=this.getDefaultRpcUrl(e,C,l),h=(null==e||null==(o=e.rpcUrls)||null==(a=o.chainDefault)||null==(r=a.http)?void 0:r[0])||p,v=(null==c||null==(s=c[C])?void 0:s.map(e=>e.url))||[],N=[...v,u],m=[...v];return h&&!m.includes(h)&&m.push(h),{...e,chainNamespace:d,caipNetworkId:C,assets:{imageId:J.NetworkImageIds[e.id],imageUrl:null==i?void 0:i[e.id]},rpcUrls:{...e.rpcUrls,default:{http:N},chainDefault:{http:m}}}},extendCaipNetworks(e,t){let{customNetworkImageUrls:n,projectId:r,customRpcUrls:a}=t;return e.map(e=>Z.extendCaipNetwork(e,{customNetworkImageUrls:n,customRpcUrls:a,projectId:r}))},getViemTransport(e,t,n){var r,a,o;let s=[];return null==n||n.forEach(e=>{s.push((0,V.http)(e.url,e.config))}),G.includes(e.caipNetworkId)&&s.push((0,V.http)(Y(e.caipNetworkId,t),{fetchOptions:{headers:{"Content-Type":"text/plain"}}})),null==e||null==(o=e.rpcUrls)||null==(a=o.default)||null==(r=a.http)||r.forEach(e=>{s.push((0,V.http)(e))}),H(s)},extendWagmiTransports(e,t,n){if(G.includes(e.caipNetworkId)){let r=this.getDefaultRpcUrl(e,e.caipNetworkId,t);return H([n,(0,V.http)(r)])}return n},getUnsupportedNetwork:e=>({id:e.split(":")[1],caipNetworkId:e,name:i.ConstantsUtil.UNSUPPORTED_NETWORK_NAME,chainNamespace:e.split(":")[0],nativeCurrency:{name:"",decimals:0,symbol:""},rpcUrls:{default:{http:[]}}}),getCaipNetworkFromStorage(e){var t;let n=w.StorageUtil.getActiveCaipNetworkId(),r=h.ChainController.getAllRequestedCaipNetworks(),a=Array.from((null==(t=h.ChainController.state.chains)?void 0:t.keys())||[]),o=null==n?void 0:n.split(":")[0],s=!!o&&a.includes(o),i=null==r?void 0:r.find(e=>e.caipNetworkId===n);return s&&!i&&n?this.getUnsupportedNetwork(n):i||e||(null==r?void 0:r[0])}},X=(new AbortController,{UniversalProviderErrors:{UNAUTHORIZED_DOMAIN_NOT_ALLOWED:{message:"Unauthorized: origin not allowed",alertErrorKey:"INVALID_APP_CONFIGURATION"},JWT_VALIDATION_ERROR:{message:"JWT validation error: JWT Token is not yet valid",alertErrorKey:"JWT_TOKEN_NOT_VALID"},INVALID_KEY:{message:"Unauthorized: invalid key",alertErrorKey:"INVALID_PROJECT_ID"}},ALERT_ERRORS:{SWITCH_NETWORK_NOT_FOUND:{shortMessage:"Network Not Found",longMessage:"Network not found - please make sure it is included in 'networks' array in createAppKit function"},INVALID_APP_CONFIGURATION:{shortMessage:"Invalid App Configuration",longMessage:()=>"Origin ".concat("undefined"!=typeof window?window.origin:"unknown"," not found on Allowlist - update configuration on cloud.reown.com")},IFRAME_LOAD_FAILED:{shortMessage:"Network Error - Could not load embedded wallet",longMessage:()=>"There was an issue loading the embedded wallet. Please try again later."},IFRAME_REQUEST_TIMEOUT:{shortMessage:"Embedded Wallet Request Timed Out",longMessage:()=>"There was an issue doing the request to the embedded wallet. Please try again later."},UNVERIFIED_DOMAIN:{shortMessage:"Invalid App Configuration",longMessage:()=>"There was an issue loading the embedded wallet. Please verify that your domain is allowed at cloud.reown.com"},JWT_TOKEN_NOT_VALID:{shortMessage:"Session Expired",longMessage:"Invalid session found on UniversalProvider - please check your time settings and connect again"},INVALID_PROJECT_ID:{shortMessage:"Invalid App Configuration",longMessage:"Invalid Project ID - update configuration"},PROJECT_ID_NOT_CONFIGURED:{shortMessage:"Project ID Not Configured",longMessage:"Project ID Not Configured - update configuration on cloud.reown.com"}}});var Q=e.i(792415),$=e.i(687542);let ee={createLogger(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"error",n=(0,$.getDefaultLoggerOptions)({level:t}),{logger:r}=(0,$.generatePlatformLogger)({opts:n});return r.error=function(){for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];for(let t of n)if(t instanceof Error)return void e(t,...n);e(void 0,...n)},r}},et={eip155:void 0,solana:void 0,polkadot:void 0,bip122:void 0,cosmos:void 0},en=(0,N.proxy)({providers:{...et},providerIds:{...et}}),er={state:en,subscribeKey:(e,t)=>(0,m.subscribeKey)(en,e,t),subscribe:e=>(0,N.subscribe)(en,()=>{e(en)}),subscribeProviders:e=>(0,N.subscribe)(en.providers,()=>e(en.providers)),setProvider(e,t){t&&(en.providers[e]=(0,N.ref)(t))},getProvider:e=>en.providers[e],setProviderId(e,t){t&&(en.providerIds[e]=t)},getProviderId(e){if(e)return en.providerIds[e]},reset(){en.providers={...et},en.providerIds={...et}},resetChain(e){en.providers[e]=void 0,en.providerIds[e]=void 0}};var ea=e.i(344048),eo=e.i(489284);let es={ERROR_CODE_UNRECOGNIZED_CHAIN_ID:4902,ERROR_CODE_DEFAULT:5e3,ERROR_INVALID_CHAIN_ID:32603,DEFAULT_ALLOWED_ANCESTORS:["http://localhost:*","https://*.pages.dev","https://*.vercel.app","https://*.ngrok-free.app","https://secure-mobile.walletconnect.com","https://secure-mobile.walletconnect.org"]};function ei(e){return{formatters:void 0,fees:void 0,serializers:void 0,...e}}let el=ei({id:"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",name:"Solana",network:"solana-mainnet",nativeCurrency:{name:"Solana",symbol:"SOL",decimals:9},rpcUrls:{default:{http:["https://rpc.walletconnect.org/v1"]}},blockExplorers:{default:{name:"Solscan",url:"https://solscan.io"}},testnet:!1,chainNamespace:"solana",caipNetworkId:"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",deprecatedCaipNetworkId:"solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ"}),ec=ei({id:"EtWTRABZaYq6iMfeYKouRu166VU2xqa1",name:"Solana Devnet",network:"solana-devnet",nativeCurrency:{name:"Solana",symbol:"SOL",decimals:9},rpcUrls:{default:{http:["https://rpc.walletconnect.org/v1"]}},blockExplorers:{default:{name:"Solscan",url:"https://solscan.io"}},testnet:!0,chainNamespace:"solana",caipNetworkId:"solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",deprecatedCaipNetworkId:"solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K"});ei({id:"4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",name:"Solana Testnet",network:"solana-testnet",nativeCurrency:{name:"Solana",symbol:"SOL",decimals:9},rpcUrls:{default:{http:["https://rpc.walletconnect.org/v1"]}},blockExplorers:{default:{name:"Solscan",url:"https://solscan.io"}},testnet:!0,chainNamespace:"solana",caipNetworkId:"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z"}),ei({id:"000000000019d6689c085ae165831e93",caipNetworkId:"bip122:000000000019d6689c085ae165831e93",chainNamespace:"bip122",name:"Bitcoin",nativeCurrency:{name:"Bitcoin",symbol:"BTC",decimals:8},rpcUrls:{default:{http:["https://rpc.walletconnect.org/v1"]}}}),ei({id:"000000000933ea01ad0ee984209779ba",caipNetworkId:"bip122:000000000933ea01ad0ee984209779ba",chainNamespace:"bip122",name:"Bitcoin Testnet",nativeCurrency:{name:"Bitcoin",symbol:"BTC",decimals:8},rpcUrls:{default:{http:["https://rpc.walletconnect.org/v1"]}},testnet:!0});let ed={solana:["solana_signMessage","solana_signTransaction","solana_requestAccounts","solana_getAccounts","solana_signAllTransactions","solana_signAndSendTransaction"],eip155:["eth_accounts","eth_requestAccounts","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sendTransaction","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode","wallet_getCallsStatus","wallet_showCallsStatus","wallet_sendCalls","wallet_getCapabilities","wallet_grantPermissions","wallet_revokePermissions","wallet_getAssets"],bip122:["sendTransfer","signMessage","signPsbt","getAccountAddresses"]},eC={getMethodsByChainNamespace:e=>ed[e]||[],createDefaultNamespace(e){return{methods:this.getMethodsByChainNamespace(e),events:["accountsChanged","chainChanged"],chains:[],rpcMap:{}}},applyNamespaceOverrides(e,t){if(!t)return{...e};let n={...e},r=new Set;if(t.methods&&Object.keys(t.methods).forEach(e=>r.add(e)),t.chains&&Object.keys(t.chains).forEach(e=>r.add(e)),t.events&&Object.keys(t.events).forEach(e=>r.add(e)),t.rpcMap&&Object.keys(t.rpcMap).forEach(e=>{let[t]=e.split(":");t&&r.add(t)}),r.forEach(e=>{n[e]||(n[e]=this.createDefaultNamespace(e))}),t.methods&&Object.entries(t.methods).forEach(e=>{let[t,r]=e;n[t]&&(n[t].methods=r)}),t.chains&&Object.entries(t.chains).forEach(e=>{let[t,r]=e;n[t]&&(n[t].chains=r)}),t.events&&Object.entries(t.events).forEach(e=>{let[t,r]=e;n[t]&&(n[t].events=r)}),t.rpcMap){let e=new Set;Object.entries(t.rpcMap).forEach(t=>{let[r,a]=t,[o,s]=r.split(":");o&&s&&n[o]&&(n[o].rpcMap||(n[o].rpcMap={}),e.has(o)||(n[o].rpcMap={},e.add(o)),n[o].rpcMap[s]=a)})}return n},createNamespaces(e,t){let n=e.reduce((e,t)=>{let{id:n,chainNamespace:r,rpcUrls:a}=t,o=a.default.http[0];e[r]||(e[r]=this.createDefaultNamespace(r));let s="".concat(r,":").concat(n),i=e[r];switch(i.chains.push(s),s){case el.caipNetworkId:i.chains.push(el.deprecatedCaipNetworkId);break;case ec.caipNetworkId:i.chains.push(ec.deprecatedCaipNetworkId)}return(null==i?void 0:i.rpcMap)&&o&&(i.rpcMap[n]=o),e},{});return this.applyNamespaceOverrides(n,t)},resolveReownName:async e=>{var t;let n=await b.resolveName(e);return(null==(t=(Object.values(null==n?void 0:n.addresses)||[])[0])?void 0:t.address)||!1},getChainsFromNamespaces(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.values(e).flatMap(e=>Array.from(new Set([...e.chains||[],...e.accounts.map(e=>{let[t,n]=e.split(":");return"".concat(t,":").concat(n)})])))},isSessionEventData:e=>"object"==typeof e&&null!==e&&"id"in e&&"topic"in e&&"params"in e&&"object"==typeof e.params&&null!==e.params&&"chainId"in e.params&&"event"in e.params&&"object"==typeof e.params.event&&null!==e.params.event,isOriginAllowed(e,t,n){for(let r of[...t,...n])if(r.includes("*")){let t=r.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&");if(RegExp("^".concat(t.replace(/\\\*/gu,".*"),"$"),"u").test(e))return!0}else try{if(new URL(r).origin===e)return!0}catch(t){if(r===e)return!0}return!1}};class ep{get chains(){return this.getCaipNetworks()}async connectWalletConnect(){if(!await this.authenticate()){let e=this.getCaipNetworks(),t=o.OptionsController.state.universalProviderConfigOverride,n=eC.createNamespaces(e,t);await this.provider.connect({optionalNamespaces:n})}return{clientId:await this.provider.client.core.crypto.getClientId(),session:this.provider.session}}async disconnect(){await this.provider.disconnect()}async authenticate(){let e=this.chains.map(e=>e.caipNetworkId);return P.SIWXUtil.universalProviderAuthenticate({universalProvider:this.provider,chains:e,methods:eu})}constructor({provider:e,namespace:t}){this.id=i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT,this.name=J.ConnectorNamesMap[i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT],this.type="WALLET_CONNECT",this.imageId=J.ConnectorImageIds[i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT],this.getCaipNetworks=h.ChainController.getCaipNetworks.bind(h.ChainController),this.caipNetworks=this.getCaipNetworks(),this.provider=e,this.chain=t}}let eu=["eth_accounts","eth_requestAccounts","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sendTransaction","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode","wallet_getCallsStatus","wallet_sendCalls","wallet_getCapabilities","wallet_grantPermissions","wallet_revokePermissions","wallet_getAssets"];class eh{construct(e){this.projectId=e.projectId,this.namespace=e.namespace,this.adapterType=e.adapterType}get connectors(){return this.availableConnectors}get networks(){return this.getCaipNetworks(this.namespace)}setAuthProvider(e){this.addConnector({id:i.ConstantsUtil.CONNECTOR_ID.AUTH,type:"AUTH",name:i.ConstantsUtil.CONNECTOR_NAMES.AUTH,provider:e,imageId:J.ConnectorImageIds[i.ConstantsUtil.CONNECTOR_ID.AUTH],chain:this.namespace,chains:[]})}addConnector(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];let r=new Set;this.availableConnectors=[...t,...this.availableConnectors].filter(e=>!r.has(e.id)&&(r.add(e.id),!0)),this.emit("connectors",this.availableConnectors)}setStatus(e,n){t.AccountController.setStatus(e,n)}on(e,t){var n;this.eventListeners.has(e)||this.eventListeners.set(e,new Set),null==(n=this.eventListeners.get(e))||n.add(t)}off(e,t){let n=this.eventListeners.get(e);n&&n.delete(t)}removeAllEventListeners(){this.eventListeners.forEach(e=>{e.clear()})}emit(e,t){let n=this.eventListeners.get(e);n&&n.forEach(e=>e(t))}async connectWalletConnect(e){let t=this.getWalletConnectConnector();return{clientId:(await t.connectWalletConnect()).clientId}}async switchNetwork(e){let{caipNetwork:n,providerType:r}=e;if(!e.provider)return;let a="provider"in e.provider?e.provider.provider:e.provider;if("WALLET_CONNECT"===r)return void a.setDefaultChain(n.caipNetworkId);if(a&&"AUTH"===r){var o;let e=null==(o=t.AccountController.state.preferredAccountTypes)?void 0:o[n.chainNamespace];await a.switchNetwork(n.caipNetworkId);let r=await a.getUser({chainId:n.caipNetworkId,preferredAccountType:e});this.emit("switchNetwork",r)}}getWalletConnectConnector(){let e=this.connectors.find(e=>e instanceof ep);if(!e)throw Error("WalletConnectConnector not found");return e}constructor(e){this.availableConnectors=[],this.eventListeners=new Map,this.getCaipNetworks=e=>h.ChainController.getCaipNetworks(e),e&&this.construct(e)}}class ev extends eh{setUniversalProvider(e){this.addConnector(new ep({provider:e,caipNetworks:this.getCaipNetworks(),namespace:this.namespace}))}async connect(e){return Promise.resolve({id:"WALLET_CONNECT",type:"WALLET_CONNECT",chainId:Number(e.chainId),provider:this.provider,address:""})}async disconnect(){try{let e=this.getWalletConnectConnector();await e.disconnect()}catch(e){console.warn("UniversalAdapter:disconnect - error",e)}}async getAccounts(e){var t,n,r,o;let{namespace:s}=e,i=this.provider;return Promise.resolve({accounts:((null==i||null==(o=i.session)||null==(r=o.namespaces)||null==(n=r[s])||null==(t=n.accounts)?void 0:t.map(e=>{let[,,t]=e.split(":");return t}).filter((e,t,n)=>n.indexOf(e)===t))||[]).map(e=>a.CoreHelperUtil.createAccount(s,e,"bip122"===s?"payment":"eoa"))})}async syncConnectors(){return Promise.resolve()}async getBalance(e){var n,r,a,o,s;if(!(e.caipNetwork&&v.ConstantsUtil.BALANCE_SUPPORTED_CHAINS.includes(null==(n=e.caipNetwork)?void 0:n.chainNamespace))||(null==(r=e.caipNetwork)?void 0:r.testnet))return{balance:"0.00",symbol:(null==(s=e.caipNetwork)?void 0:s.nativeCurrency.symbol)||""};if(t.AccountController.state.balanceLoading&&e.chainId===(null==(a=h.ChainController.state.activeCaipNetwork)?void 0:a.id))return{balance:t.AccountController.state.balance||"0.00",symbol:t.AccountController.state.balanceSymbol||""};let i=(await t.AccountController.fetchTokenBalance()).find(t=>{var n,r;return t.chainId==="".concat(null==(n=e.caipNetwork)?void 0:n.chainNamespace,":").concat(e.chainId)&&t.symbol===(null==(r=e.caipNetwork)?void 0:r.nativeCurrency.symbol)});return{balance:(null==i?void 0:i.quantity.numeric)||"0.00",symbol:(null==i?void 0:i.symbol)||(null==(o=e.caipNetwork)?void 0:o.nativeCurrency.symbol)||""}}async signMessage(e){var t,n,r;let{provider:a,message:o,address:s}=e;if(!a)throw Error("UniversalAdapter:signMessage - provider is undefined");return{signature:(null==(t=h.ChainController.state.activeCaipNetwork)?void 0:t.chainNamespace)===i.ConstantsUtil.CHAIN.SOLANA?(await a.request({method:"solana_signMessage",params:{message:ea.default.encode(new TextEncoder().encode(o)),pubkey:s}},null==(n=h.ChainController.state.activeCaipNetwork)?void 0:n.caipNetworkId)).signature:await a.request({method:"personal_sign",params:[o,s]},null==(r=h.ChainController.state.activeCaipNetwork)?void 0:r.caipNetworkId)}}async estimateGas(){return Promise.resolve({gas:BigInt(0)})}async sendTransaction(){return Promise.resolve({hash:""})}walletGetAssets(e){return Promise.resolve({})}async writeContract(){return Promise.resolve({hash:""})}parseUnits(){return 0n}formatUnits(){return"0"}async getCapabilities(){return Promise.resolve({})}async grantPermissions(){return Promise.resolve({})}async revokePermissions(){return Promise.resolve("0x")}async syncConnection(){return Promise.resolve({id:"WALLET_CONNECT",type:"WALLET_CONNECT",chainId:1,provider:this.provider,address:""})}async switchNetwork(e){let{caipNetwork:t}=e,n=this.getWalletConnectConnector();if(t.chainNamespace===i.ConstantsUtil.CHAIN.EVM){var r,a,o,s,l,c;try{await (null==(r=n.provider)?void 0:r.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,eo.toHex)(t.id)}]}))}catch(e){if(e.code===es.ERROR_CODE_UNRECOGNIZED_CHAIN_ID||e.code===es.ERROR_INVALID_CHAIN_ID||e.code===es.ERROR_CODE_DEFAULT||(null==e||null==(o=e.data)||null==(a=o.originalError)?void 0:a.code)===es.ERROR_CODE_UNRECOGNIZED_CHAIN_ID)try{await (null==(c=n.provider)?void 0:c.request({method:"wallet_addEthereumChain",params:[{chainId:(0,eo.toHex)(t.id),rpcUrls:[null==t||null==(s=t.rpcUrls.chainDefault)?void 0:s.http],chainName:t.name,nativeCurrency:t.nativeCurrency,blockExplorerUrls:[null==(l=t.blockExplorers)?void 0:l.default.url]}]}))}catch(e){throw Error("Chain is not supported")}}}n.provider.setDefaultChain(t.caipNetworkId)}getWalletConnectProvider(){let e=this.connectors.find(e=>"WALLET_CONNECT"===e.type);return null==e?void 0:e.provider}}let eN=["email","socials","swaps","onramp","activity","reownBranding"],em={email:{apiFeatureName:"social_login",localFeatureName:"email",returnType:!1,isLegacy:!1,isAvailableOnBasic:!1,processApi:e=>{if(!(null==e?void 0:e.config))return!1;let t=e.config;return!!e.isEnabled&&t.includes("email")},processFallback:e=>void 0===e?v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.email:!!e},socials:{apiFeatureName:"social_login",localFeatureName:"socials",returnType:!1,isLegacy:!1,isAvailableOnBasic:!1,processApi:e=>{if(!(null==e?void 0:e.config))return!1;let t=e.config;return!!e.isEnabled&&t.length>0&&t.filter(e=>"email"!==e)},processFallback:e=>void 0===e?v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.socials:"boolean"==typeof e?!!e&&v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.socials:e},swaps:{apiFeatureName:"swap",localFeatureName:"swaps",returnType:!1,isLegacy:!1,isAvailableOnBasic:!1,processApi:e=>{if(!(null==e?void 0:e.config))return!1;let t=e.config;return!!e.isEnabled&&t.length>0&&t},processFallback:e=>void 0===e?v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.swaps:"boolean"==typeof e?!!e&&v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.swaps:e},onramp:{apiFeatureName:"onramp",localFeatureName:"onramp",returnType:!1,isLegacy:!1,isAvailableOnBasic:!1,processApi:e=>{if(!(null==e?void 0:e.config))return!1;let t=e.config;return!!e.isEnabled&&t.length>0&&t},processFallback:e=>void 0===e?v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.onramp:"boolean"==typeof e?!!e&&v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.onramp:e},activity:{apiFeatureName:"activity",localFeatureName:"history",returnType:!1,isLegacy:!0,isAvailableOnBasic:!1,processApi:e=>!!e.isEnabled,processFallback:e=>void 0===e?v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.activity:!!e},reownBranding:{apiFeatureName:"reown_branding",localFeatureName:"reownBranding",returnType:!1,isLegacy:!1,isAvailableOnBasic:!1,processApi:e=>!!e.isEnabled,processFallback:e=>void 0===e?v.ConstantsUtil.DEFAULT_REMOTE_FEATURES.reownBranding:!!e}},eg={localSettingsOverridden:new Set,getApiConfig:(e,t)=>null==t?void 0:t.find(t=>t.id===e),addWarning(e,t){if(void 0!==e){let e=em[t],n=e.isLegacy?'"features.'.concat(e.localFeatureName,'" (now "').concat(t,'")'):'"features.'.concat(t,'"');this.localSettingsOverridden.add(n)}},processFeature(e,t,n,r,a){let o=em[e],s=t[o.localFeatureName];if(a&&!o.isAvailableOnBasic)return!1;if(r){let t=this.getApiConfig(o.apiFeatureName,n);return(null==t?void 0:t.config)===null?this.processFallbackFeature(e,s):!!(null==t?void 0:t.config)&&(void 0!==s&&this.addWarning(s,e),this.processApiFeature(e,t))}return this.processFallbackFeature(e,s)},processApiFeature:(e,t)=>em[e].processApi(t),processFallbackFeature:(e,t)=>em[e].processFallback(t),async fetchRemoteFeatures(e){var t;let n=null!=(t=e.basic)&&t,r=e.features||{};this.localSettingsOverridden.clear();let a=null,o=!1;try{o=null!=(a=await C.ApiController.fetchProjectConfig())}catch(e){console.warn("[Reown Config] Failed to fetch remote project configuration. Using local/default values.",e)}let s=o&&!n?v.ConstantsUtil.DEFAULT_REMOTE_FEATURES:v.ConstantsUtil.DEFAULT_REMOTE_FEATURES_DISABLED;try{for(let e of eN){let t=this.processFeature(e,r,a,o,n);Object.assign(s,{[e]:t})}}catch(e){return console.warn("[Reown Config] Failed to process the configuration from Cloud. Using default values.",e),v.ConstantsUtil.DEFAULT_REMOTE_FEATURES}if(o&&this.localSettingsOverridden.size>0){let e="Your local configuration for ".concat(Array.from(this.localSettingsOverridden).join(", ")," was ignored because a remote configuration was successfully fetched. Please manage these features via your project dashboard on dashboard.reown.com.");d.AlertController.open({shortMessage:"Local configuration ignored",longMessage:"[Reown Config Notice] ".concat(e)},"warning")}return s}};class ew{getChainNamespacesSet(e,t){let n=null==e?void 0:e.map(e=>e.namespace).filter(e=>!!e);return(null==n?void 0:n.length)?[...new Set(n)]:[...new Set(null==t?void 0:t.map(e=>e.chainNamespace))]}async initialize(e){var t,n,r;this.initializeProjectSettings(e),this.initControllers(e),await this.initChainAdapters(),this.sendInitializeEvent(e),await this.syncExistingConnection(),this.remoteFeatures=await eg.fetchRemoteFeatures(e),o.OptionsController.setRemoteFeatures(this.remoteFeatures),this.remoteFeatures.onramp&&_.setOnrampProviders(this.remoteFeatures.onramp),((null==(t=o.OptionsController.state.remoteFeatures)?void 0:t.email)||Array.isArray(null==(n=o.OptionsController.state.remoteFeatures)?void 0:n.socials)&&(null==(r=o.OptionsController.state.remoteFeatures)?void 0:r.socials.length)>0)&&await this.checkAllowedOrigins()}async checkAllowedOrigins(){let e=await C.ApiController.fetchAllowedOrigins();if(e&&a.CoreHelperUtil.isClient()){let t=window.location.origin;eC.isOriginAllowed(t,e,es.DEFAULT_ALLOWED_ANCESTORS)||d.AlertController.open(X.ALERT_ERRORS.INVALID_APP_CONFIGURATION,"error")}else d.AlertController.open(X.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED,"error")}sendInitializeEvent(e){var t;let{...n}=e;delete n.adapters,delete n.universalProvider,y.EventsController.sendEvent({type:"track",event:"INITIALIZE",properties:{...n,networks:e.networks.map(e=>e.id),siweConfig:{options:(null==(t=e.siweConfig)?void 0:t.options)||{}}}})}initControllers(e){this.initializeOptionsController(e),this.initializeChainController(e),this.initializeThemeController(e),this.initializeConnectionController(e),this.initializeConnectorController()}initializeThemeController(e){e.themeMode&&L.ThemeController.setThemeMode(e.themeMode),e.themeVariables&&L.ThemeController.setThemeVariables(e.themeVariables)}initializeChainController(e){var t;if(!this.connectionControllerClient||!this.networkControllerClient)throw Error("ConnectionControllerClient and NetworkControllerClient must be set");h.ChainController.initialize(null!=(t=e.adapters)?t:[],this.caipNetworks,{connectionControllerClient:this.connectionControllerClient,networkControllerClient:this.networkControllerClient});let n=this.getDefaultNetwork();n&&h.ChainController.setActiveCaipNetwork(n)}initializeConnectionController(e){var t;n.ConnectionController.setWcBasic(null!=(t=e.basic)&&t)}initializeConnectorController(){r.ConnectorController.initialize(this.chainNamespaces)}initializeProjectSettings(e){o.OptionsController.setProjectId(e.projectId),o.OptionsController.setSdkVersion(e.sdkVersion)}initializeOptionsController(e){var n;o.OptionsController.setDebug(!1!==e.debug),o.OptionsController.setEnableWalletConnect(!1!==e.enableWalletConnect),o.OptionsController.setEnableWalletGuide(!1!==e.enableWalletGuide),o.OptionsController.setEnableWallets(!1!==e.enableWallets),o.OptionsController.setEIP6963Enabled(!1!==e.enableEIP6963),o.OptionsController.setEnableNetworkSwitch(!1!==e.enableNetworkSwitch),o.OptionsController.setEnableAuthLogger(!1!==e.enableAuthLogger),o.OptionsController.setCustomRpcUrls(e.customRpcUrls),o.OptionsController.setEnableEmbedded(e.enableEmbedded),o.OptionsController.setAllWallets(e.allWallets),o.OptionsController.setIncludeWalletIds(e.includeWalletIds),o.OptionsController.setExcludeWalletIds(e.excludeWalletIds),o.OptionsController.setFeaturedWalletIds(e.featuredWalletIds),o.OptionsController.setTokens(e.tokens),o.OptionsController.setTermsConditionsUrl(e.termsConditionsUrl),o.OptionsController.setPrivacyPolicyUrl(e.privacyPolicyUrl),o.OptionsController.setCustomWallets(e.customWallets),o.OptionsController.setFeatures(e.features),o.OptionsController.setAllowUnsupportedChain(e.allowUnsupportedChain),o.OptionsController.setUniversalProviderConfigOverride(e.universalProviderConfigOverride),o.OptionsController.setPreferUniversalLinks(e.experimental_preferUniversalLinks),o.OptionsController.setDefaultAccountTypes(e.defaultAccountTypes);let r=w.StorageUtil.getPreferredAccountTypes()||{},a={...o.OptionsController.state.defaultAccountTypes,...r};t.AccountController.setPreferredAccountTypes(a);let s=this.getDefaultMetaData();if(!e.metadata&&s&&(e.metadata=s),o.OptionsController.setMetadata(e.metadata),o.OptionsController.setDisableAppend(e.disableAppend),o.OptionsController.setEnableEmbedded(e.enableEmbedded),o.OptionsController.setSIWX(e.siwx),!e.projectId)return void d.AlertController.open(X.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED,"error");if((null==(n=e.adapters)?void 0:n.find(e=>e.namespace===i.ConstantsUtil.CHAIN.EVM))&&e.siweConfig){if(e.siwx)throw Error("Cannot set both `siweConfig` and `siwx` options");o.OptionsController.setSIWX(e.siweConfig.mapToSIWX())}}getDefaultMetaData(){if(a.CoreHelperUtil.isClient()){var e,t,n,r;return{name:(null==(t=document.getElementsByTagName("title"))||null==(e=t[0])?void 0:e.textContent)||"",description:(null==(n=document.querySelector('meta[property="og:description"]'))?void 0:n.content)||"",url:window.location.origin,icons:[(null==(r=document.querySelector('link[rel~="icon"]'))?void 0:r.href)||""]}}return null}setUnsupportedNetwork(e){let t=this.getActiveChainNamespace();if(t){let n=Z.getUnsupportedNetwork("".concat(t,":").concat(e));h.ChainController.setActiveCaipNetwork(n)}}getDefaultNetwork(){return Z.getCaipNetworkFromStorage(this.defaultCaipNetwork)}extendCaipNetwork(e,t){return Z.extendCaipNetwork(e,{customNetworkImageUrls:t.chainImages,projectId:t.projectId})}extendCaipNetworks(e){return Z.extendCaipNetworks(e.networks,{customNetworkImageUrls:e.chainImages,customRpcUrls:e.customRpcUrls,projectId:e.projectId})}extendDefaultCaipNetwork(e){let t=e.networks.find(t=>{var n;return t.id===(null==(n=e.defaultNetwork)?void 0:n.id)});return t?Z.extendCaipNetwork(t,{customNetworkImageUrls:e.chainImages,customRpcUrls:e.customRpcUrls,projectId:e.projectId}):void 0}async disconnectNamespace(e){try{let t=this.getAdapter(e),n=er.getProvider(e),a=er.getProviderId(e),{caipAddress:o}=h.ChainController.getAccountData(e)||{};this.setLoading(!0,e),o&&(null==t?void 0:t.disconnect)&&await t.disconnect({provider:n,providerType:a}),w.StorageUtil.removeConnectedNamespace(e),er.resetChain(e),this.setUser(void 0,e),this.setStatus("disconnected",e),this.setConnectedWalletInfo(void 0,e),r.ConnectorController.removeConnectorId(e),h.ChainController.resetAccount(e),h.ChainController.resetNetwork(e),this.setLoading(!1,e)}catch(t){throw this.setLoading(!1,e),Error("Failed to disconnect chain ".concat(e,": ").concat(t.message))}}createClients(){this.connectionControllerClient={connectWalletConnect:async()=>{var e;let t=h.ChainController.state.activeChain,n=this.getAdapter(t),a=null==(e=this.getCaipNetwork(t))?void 0:e.id;if(!n)throw Error("Adapter not found");let o=await n.connectWalletConnect(a);this.close(),this.setClientId((null==o?void 0:o.clientId)||null),w.StorageUtil.setConnectedNamespaces([...h.ChainController.state.chains.keys()]),this.chainNamespaces.forEach(e=>{r.ConnectorController.setConnectorId(z.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT,e)}),await this.syncWalletConnectAccount()},connectExternal:async e=>{var n,r,a,o,s,i;let{id:l,info:c,type:d,provider:C,chain:p,caipNetwork:u,socialUri:v}=e,N=h.ChainController.state.activeChain,m=p||N,g=this.getAdapter(m);if(p&&p!==N&&!u){let e=this.getCaipNetworks().find(e=>e.chainNamespace===p);e&&this.setCaipNetwork(e)}if(!g)throw Error("Adapter not found");let A=this.getCaipNetwork(m),f=await g.connect({id:l,info:c,type:d,provider:C,socialUri:v,chainId:(null==u?void 0:u.id)||(null==A?void 0:A.id),rpcUrl:(null==u||null==(a=u.rpcUrls)||null==(r=a.default)||null==(n=r.http)?void 0:n[0])||(null==A||null==(i=A.rpcUrls)||null==(s=i.default)||null==(o=s.http)?void 0:o[0])});if(!f)return;w.StorageUtil.addConnectedNamespace(m),this.syncProvider({...f,chainNamespace:m});let E=t.AccountController.state.allAccounts,{accounts:b}=(null==E?void 0:E.length)>0?{accounts:[...E]}:await g.getAccounts({namespace:m,id:l});this.setAllAccounts(b,m),this.setStatus("connected",m),this.syncConnectedWalletInfo(m)},reconnectExternal:async e=>{let{id:t,info:n,type:r,provider:a}=e,o=h.ChainController.state.activeChain,s=this.getAdapter(o);if(null==s?void 0:s.reconnect){var i;await (null==s?void 0:s.reconnect({id:t,info:n,type:r,provider:a,chainId:null==(i=this.getCaipNetwork())?void 0:i.id})),w.StorageUtil.addConnectedNamespace(o),this.syncConnectedWalletInfo(o)}},disconnect:async e=>{let t=function(e){let t=Array.from(h.ChainController.state.chains.keys()),n=[];return e?(n.push([e,h.ChainController.state.chains.get(e)]),M(e,i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT)?t.forEach(t=>{t!==e&&M(t,i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT)&&n.push([t,h.ChainController.state.chains.get(t)])}):M(e,i.ConstantsUtil.CONNECTOR_ID.AUTH)&&t.forEach(t=>{t!==e&&M(t,i.ConstantsUtil.CONNECTOR_ID.AUTH)&&n.push([t,h.ChainController.state.chains.get(t)])})):n=Array.from(h.ChainController.state.chains.entries()),n}(e);try{let a=await Promise.allSettled(t.map(async e=>{let[t]=e;return this.disconnectNamespace(t)}));S.SendController.resetSend(),n.ConnectionController.resetWcConnection(),await P.SIWXUtil.clearSessions(),r.ConnectorController.setFilterByNamespace(void 0);let o=a.filter(e=>"rejected"===e.status);if(o.length>0)throw Error(o.map(e=>e.reason.message).join(", "));w.StorageUtil.deleteConnectedSocialProvider(),y.EventsController.sendEvent({type:"track",event:"DISCONNECT_SUCCESS",properties:{namespace:e||"all"}})}catch(e){throw Error("Failed to disconnect chains: ".concat(e.message))}},checkInstalled:e=>e?e.some(e=>{var t;return!!(null==(t=window.ethereum)?void 0:t[String(e)])}):!!window.ethereum,signMessage:async e=>{let n=this.getAdapter(h.ChainController.state.activeChain),r=await (null==n?void 0:n.signMessage({message:e,address:t.AccountController.state.address,provider:er.getProvider(h.ChainController.state.activeChain)}));return(null==r?void 0:r.signature)||""},sendTransaction:async e=>{let t=e.chainNamespace;if(v.ConstantsUtil.SEND_SUPPORTED_NAMESPACES.includes(t)){let n=this.getAdapter(h.ChainController.state.activeChain),r=er.getProvider(t),a=await (null==n?void 0:n.sendTransaction({...e,caipNetwork:this.getCaipNetwork(),provider:r}));return(null==a?void 0:a.hash)||""}return""},estimateGas:async e=>{if(e.chainNamespace===i.ConstantsUtil.CHAIN.EVM){let t=this.getAdapter(h.ChainController.state.activeChain),n=er.getProvider(h.ChainController.state.activeChain),r=this.getCaipNetwork();if(!r)throw Error("CaipNetwork is undefined");let a=await (null==t?void 0:t.estimateGas({...e,provider:n,caipNetwork:r}));return(null==a?void 0:a.gas)||0n}return 0n},getEnsAvatar:async()=>{var e;return await this.syncIdentity({address:t.AccountController.state.address,chainId:Number(null==(e=this.getCaipNetwork())?void 0:e.id),chainNamespace:h.ChainController.state.activeChain}),t.AccountController.state.profileImage||!1},getEnsAddress:async e=>await eC.resolveReownName(e),writeContract:async e=>{let t=this.getAdapter(h.ChainController.state.activeChain),n=this.getCaipNetwork(),r=this.getCaipAddress(),a=er.getProvider(h.ChainController.state.activeChain);if(!n||!r)throw Error("CaipNetwork or CaipAddress is undefined");let o=await (null==t?void 0:t.writeContract({...e,caipNetwork:n,provider:a,caipAddress:r}));return null==o?void 0:o.hash},parseUnits:(e,t)=>{var n;let r=this.getAdapter(h.ChainController.state.activeChain);return null!=(n=null==r?void 0:r.parseUnits({value:e,decimals:t}))?n:0n},formatUnits:(e,t)=>{var n;let r=this.getAdapter(h.ChainController.state.activeChain);return null!=(n=null==r?void 0:r.formatUnits({value:e,decimals:t}))?n:"0"},getCapabilities:async e=>{let t=this.getAdapter(h.ChainController.state.activeChain);return await (null==t?void 0:t.getCapabilities(e))},grantPermissions:async e=>{let t=this.getAdapter(h.ChainController.state.activeChain);return await (null==t?void 0:t.grantPermissions(e))},revokePermissions:async e=>{let t=this.getAdapter(h.ChainController.state.activeChain);return(null==t?void 0:t.revokePermissions)?await t.revokePermissions(e):"0x"},walletGetAssets:async e=>{var t;let n=this.getAdapter(h.ChainController.state.activeChain);return null!=(t=await (null==n?void 0:n.walletGetAssets(e)))?t:{}},updateBalance:e=>{let n=this.getCaipNetwork(e);n&&t.AccountController.state.address&&this.updateNativeBalance(t.AccountController.state.address,null==n?void 0:n.id,e)}},this.networkControllerClient={switchCaipNetwork:async e=>await this.switchCaipNetwork(e),getApprovedCaipNetworksData:async()=>this.getApprovedCaipNetworksData()},n.ConnectionController.setClient(this.connectionControllerClient)}getApprovedCaipNetworksData(){if(er.getProviderId(h.ChainController.state.activeChain)===z.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT){var e,t,n,r,a;let o=null==(t=this.universalProvider)||null==(e=t.session)?void 0:e.namespaces;return{supportsAllNetworks:(null==(a=this.universalProvider)||null==(r=a.session)||null==(n=r.peer)?void 0:n.metadata.name)==="MetaMask Wallet",approvedCaipNetworkIds:this.getChainsFromNamespaces(o)}}return{supportsAllNetworks:!0,approvedCaipNetworkIds:[]}}async switchCaipNetwork(e){if(!e)return;let t=e.chainNamespace;if(this.getAddressByChainNamespace(e.chainNamespace)){let n=er.getProvider(t),r=er.getProviderId(t);if(e.chainNamespace===h.ChainController.state.activeChain){let a=this.getAdapter(t);await (null==a?void 0:a.switchNetwork({caipNetwork:e,provider:n,providerType:r}))}else if(this.setCaipNetwork(e),r===z.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT)this.syncWalletConnectAccount();else{let n=this.getAddressByChainNamespace(t);n&&this.syncAccount({address:n,chainId:e.id,chainNamespace:t})}}else this.setCaipNetwork(e)}getChainsFromNamespaces(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.values(e).flatMap(e=>Array.from(new Set([...e.chains||[],...e.accounts.map(e=>{let{chainId:t,chainNamespace:n}=c.parseCaipAddress(e);return"".concat(n,":").concat(t)})])))}createAdapters(e){return this.createClients(),this.chainNamespaces.reduce((t,n)=>{let r=null==e?void 0:e.find(e=>e.namespace===n);if(r){var a;r.construct({namespace:n,projectId:null==(a=this.options)?void 0:a.projectId,networks:this.getCaipNetworks()}),t[n]=r}else t[n]=new ev({namespace:n,networks:this.getCaipNetworks()});return t},{})}async initChainAdapter(e){var t;this.onConnectors(e),this.listenAdapter(e),await (null==(t=this.chainAdapters)?void 0:t[e].syncConnectors(this.options,this)),await this.createUniversalProviderForAdapter(e)}async initChainAdapters(){await Promise.all(this.chainNamespaces.map(async e=>{await this.initChainAdapter(e)}))}onConnectors(e){let t=this.getAdapter(e);null==t||t.on("connectors",this.setConnectors.bind(this))}listenAdapter(e){let n=this.getAdapter(e);if(!n)return;let r=w.StorageUtil.getConnectionStatus();"connected"===r?this.setStatus("connecting",e):("disconnected"===r&&w.StorageUtil.clearAddressCache(),this.setStatus(r,e)),n.on("switchNetwork",t=>{let{address:n,chainId:r}=t,a=this.getCaipNetworks().find(e=>e.id===r||e.caipNetworkId===r),o=h.ChainController.state.activeChain===e,s=h.ChainController.getAccountProp("address",e);if(a){let t=o&&n?n:s;t&&this.syncAccount({address:t,chainId:a.id,chainNamespace:e})}else this.setUnsupportedNetwork(r)}),n.on("disconnect",this.disconnect.bind(this,e)),n.on("connections",t=>{this.setConnections(t,e)}),n.on("pendingTransactions",()=>{let e=t.AccountController.state.address,n=h.ChainController.state.activeCaipNetwork;e&&(null==n?void 0:n.id)&&this.updateNativeBalance(e,n.id,n.chainNamespace)}),n.on("accountChanged",t=>{var n,r;let{address:a,chainId:o}=t,s=h.ChainController.state.activeChain===e;s&&o?this.syncAccount({address:a,chainId:o,chainNamespace:e}):s&&(null==(n=h.ChainController.state.activeCaipNetwork)?void 0:n.id)?this.syncAccount({address:a,chainId:null==(r=h.ChainController.state.activeCaipNetwork)?void 0:r.id,chainNamespace:e}):this.syncAccountInfo(a,o,e),this.syncAllAccounts(e)})}async createUniversalProviderForAdapter(e){if(await this.getUniversalProvider(),this.universalProvider){var t,n,r;null==(r=this.chainAdapters)||null==(n=r[e])||null==(t=n.setUniversalProvider)||t.call(n,this.universalProvider)}}async syncExistingConnection(){await Promise.allSettled(this.chainNamespaces.map(e=>this.syncNamespaceConnection(e)))}async syncNamespaceConnection(e){try{e===i.ConstantsUtil.CHAIN.EVM&&a.CoreHelperUtil.isSafeApp()&&r.ConnectorController.setConnectorId(i.ConstantsUtil.CONNECTOR_ID.SAFE,e);let t=r.ConnectorController.getConnectorId(e);switch(this.setStatus("connecting",e),t){case i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT:await this.syncWalletConnectAccount();break;case i.ConstantsUtil.CONNECTOR_ID.AUTH:break;default:await this.syncAdapterConnection(e)}}catch(t){console.warn("AppKit couldn't sync existing connection",t),this.setStatus("disconnected",e)}}async syncAdapterConnection(e){let t=this.getAdapter(e),n=r.ConnectorController.getConnectorId(e),o=this.getCaipNetwork(e),s=r.ConnectorController.getConnectors(e).find(e=>e.id===n);try{var i,l,c;if(!t||!s)throw Error("Adapter or connector not found for namespace ".concat(e));if(!(null==o?void 0:o.id))throw Error("CaipNetwork not found");let n=await (null==t?void 0:t.syncConnection({namespace:e,id:s.id,chainId:o.id,rpcUrl:null==o||null==(c=o.rpcUrls)||null==(l=c.default)||null==(i=l.http)?void 0:i[0]}));if(n){let r=await (null==t?void 0:t.getAccounts({namespace:e,id:s.id}));r&&r.accounts.length>0?this.setAllAccounts(r.accounts,e):this.setAllAccounts([a.CoreHelperUtil.createAccount(e,n.address,"eoa")],e),this.syncProvider({...n,chainNamespace:e}),await this.syncAccount({...n,chainNamespace:e}),this.setStatus("connected",e)}else this.setStatus("disconnected",e)}catch(t){this.setStatus("disconnected",e)}}async syncWalletConnectAccount(){let e=this.chainNamespaces.map(async e=>{var t,n,a,o,s;let l=this.getAdapter(e),d=(null==(o=this.universalProvider)||null==(a=o.session)||null==(n=a.namespaces)||null==(t=n[e])?void 0:t.accounts)||[],C=null==(s=h.ChainController.state.activeCaipNetwork)?void 0:s.id,p=d.find(e=>{let{chainId:t}=c.parseCaipAddress(e);return t===(null==C?void 0:C.toString())})||d[0];if(p){let t=c.validateCaipAddress(p),{chainId:n,address:a}=c.parseCaipAddress(t);if(er.setProviderId(e,z.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT),this.caipNetworks&&h.ChainController.state.activeCaipNetwork&&(null==l?void 0:l.namespace)!==i.ConstantsUtil.CHAIN.EVM){let t=null==l?void 0:l.getWalletConnectProvider({caipNetworks:this.getCaipNetworks(),provider:this.universalProvider,activeCaipNetwork:h.ChainController.state.activeCaipNetwork});er.setProvider(e,t)}else er.setProvider(e,this.universalProvider);r.ConnectorController.setConnectorId(i.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT,e),w.StorageUtil.addConnectedNamespace(e),this.syncWalletConnectAccounts(e),await this.syncAccount({address:a,chainId:n,chainNamespace:e})}else this.setStatus("disconnected",e);this.syncConnectedWalletInfo(e),await h.ChainController.setApprovedCaipNetworksData(e)});await Promise.all(e)}syncWalletConnectAccounts(e){var t,n,r,o,s;let i=null==(s=this.universalProvider)||null==(o=s.session)||null==(r=o.namespaces)||null==(n=r[e])||null==(t=n.accounts)?void 0:t.map(e=>{let{address:t}=c.parseCaipAddress(e);return t}).filter((e,t,n)=>n.indexOf(e)===t);i&&this.setAllAccounts(i.map(t=>a.CoreHelperUtil.createAccount(e,t,"bip122"===e?"payment":"eoa")),e)}syncProvider(e){let{type:t,provider:n,id:a,chainNamespace:o}=e;er.setProviderId(o,t),er.setProvider(o,n),r.ConnectorController.setConnectorId(a,o)}async syncAllAccounts(e){let t=r.ConnectorController.getConnectorId(e);if(!t)return;let n=this.getAdapter(e),a=await (null==n?void 0:n.getAccounts({namespace:e,id:t}));a&&a.accounts.length>0&&this.setAllAccounts(a.accounts,e)}async syncAccount(e){var n,r;let a=e.chainNamespace===h.ChainController.state.activeChain,s=h.ChainController.getCaipNetworkByNamespace(e.chainNamespace,e.chainId),{address:l,chainId:d,chainNamespace:C}=e,{chainId:p}=w.StorageUtil.getActiveNetworkProps(),u=d||p,v=(null==(n=h.ChainController.state.activeCaipNetwork)?void 0:n.name)===i.ConstantsUtil.UNSUPPORTED_NETWORK_NAME,N=h.ChainController.getNetworkProp("supportsAllNetworks",C);if(this.setStatus("connected",C),(!v||N)&&u){let e=this.getCaipNetworks().find(e=>e.id.toString()===u.toString()),n=this.getCaipNetworks().find(e=>e.chainNamespace===C);if(!N&&!e&&!n){let t=this.getApprovedCaipNetworkIds()||[],r=t.find(e=>{var t;return(null==(t=c.parseCaipNetworkId(e))?void 0:t.chainId)===u.toString()}),a=t.find(e=>{var t;return(null==(t=c.parseCaipNetworkId(e))?void 0:t.chainNamespace)===C});e=this.getCaipNetworks().find(e=>e.caipNetworkId===r),n=this.getCaipNetworks().find(e=>e.caipNetworkId===a||"deprecatedCaipNetworkId"in e&&e.deprecatedCaipNetworkId===a)}let d=e||n;(null==d?void 0:d.chainNamespace)===h.ChainController.state.activeChain?o.OptionsController.state.enableNetworkSwitch&&!o.OptionsController.state.allowUnsupportedChain&&(null==(r=h.ChainController.state.activeCaipNetwork)?void 0:r.name)===i.ConstantsUtil.UNSUPPORTED_NETWORK_NAME?h.ChainController.showUnsupportedChainUI():this.setCaipNetwork(d):!a&&s&&this.setCaipNetworkOfNamespace(s,C),this.syncConnectedWalletInfo(C),Q.HelpersUtil.isLowerCaseMatch(l,t.AccountController.state.address)||this.syncAccountInfo(l,null==d?void 0:d.id,C),a?await this.syncBalance({address:l,chainId:null==d?void 0:d.id,chainNamespace:C}):await this.syncBalance({address:l,chainId:null==s?void 0:s.id,chainNamespace:C})}}async syncAccountInfo(e,t,n){let r=this.getCaipAddress(n),a=t||(null==r?void 0:r.split(":")[1]);if(!a)return;let o="".concat(n,":").concat(a,":").concat(e);this.setCaipAddress(o,n),await this.syncIdentity({address:e,chainId:a,chainNamespace:n})}async syncReownName(e,t){try{let n=await this.getReownName(e);if(n[0]){let e=n[0];this.setProfileName(e.name,t)}else this.setProfileName(null,t)}catch(e){this.setProfileName(null,t)}}syncConnectedWalletInfo(e){let t=r.ConnectorController.getConnectorId(e),n=er.getProviderId(e);if(n===z.ConstantsUtil.CONNECTOR_TYPE_ANNOUNCED||n===z.ConstantsUtil.CONNECTOR_TYPE_INJECTED){if(t){let n=this.getConnectors().find(e=>e.id===t);if(n){let{info:t,name:r,imageUrl:a}=n,o=a||this.getConnectorImage(n);this.setConnectedWalletInfo({name:r,icon:o,...t},e)}}}else if(n===z.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT){let t=er.getProvider(e);if(null==t?void 0:t.session){var a;this.setConnectedWalletInfo({...t.session.peer.metadata,name:t.session.peer.metadata.name,icon:null==(a=t.session.peer.metadata.icons)?void 0:a[0]},e)}}else if(t&&t===i.ConstantsUtil.CONNECTOR_ID.COINBASE){let t=this.getConnectors().find(e=>e.id===i.ConstantsUtil.CONNECTOR_ID.COINBASE);this.setConnectedWalletInfo({name:"Coinbase Wallet",icon:this.getConnectorImage(t)},e)}}async syncBalance(e){l.NetworkUtil.getNetworksByNamespace(this.getCaipNetworks(),e.chainNamespace).find(t=>{var n;return t.id.toString()===(null==(n=e.chainId)?void 0:n.toString())})&&e.chainId&&await this.updateNativeBalance(e.address,e.chainId,e.chainNamespace)}async ready(){await this.readyPromise}async updateNativeBalance(e,t,n){let r=this.getAdapter(n),a=h.ChainController.getCaipNetworkByNamespace(n,t);if(r){let o=await r.getBalance({address:e,chainId:t,caipNetwork:a,tokens:this.options.tokens});return this.setBalance(o.balance,o.symbol,n),o}}async initializeUniversalAdapter(){var e,t,n,r,a,i,l,c,d,C,p,u=this;let h=ee.createLogger(function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];e&&u.handleAlertError(e),console.error(...n)}),v={projectId:null==(e=this.options)?void 0:e.projectId,metadata:{name:(null==(t=this.options)?void 0:t.metadata)?null==(n=this.options)?void 0:n.metadata.name:"",description:(null==(r=this.options)?void 0:r.metadata)?null==(a=this.options)?void 0:a.metadata.description:"",url:(null==(i=this.options)?void 0:i.metadata)?null==(l=this.options)?void 0:l.metadata.url:"",icons:(null==(c=this.options)?void 0:c.metadata)?null==(d=this.options)?void 0:d.metadata.icons:[""]},logger:h};o.OptionsController.setManualWCControl(!!(null==(C=this.options)?void 0:C.manualWCControl)),this.universalProvider=null!=(p=this.options.universalProvider)?p:await s.default.init(v),this.listenWalletConnect()}listenWalletConnect(){this.universalProvider&&(this.universalProvider.on("display_uri",e=>{n.ConnectionController.setUri(e)}),this.universalProvider.on("connect",n.ConnectionController.finalizeWcConnection),this.universalProvider.on("disconnect",()=>{this.chainNamespaces.forEach(e=>{this.resetAccount(e)}),n.ConnectionController.resetWcConnection()}),this.universalProvider.on("chainChanged",e=>{let t=this.getCaipNetworks().find(t=>t.id==e),n=this.getCaipNetwork();if(!t)return void this.setUnsupportedNetwork(e);(null==n?void 0:n.id)!==(null==t?void 0:t.id)&&this.setCaipNetwork(t)}),this.universalProvider.on("session_event",e=>{if(eC.isSessionEventData(e)){let{name:t,data:n}=e.params.event;"accountsChanged"===t&&Array.isArray(n)&&a.CoreHelperUtil.isCaipAddress(n[0])&&this.syncAccount(c.parseCaipAddress(n[0]))}}))}createUniversalProvider(){var e;return!this.universalProviderInitPromise&&a.CoreHelperUtil.isClient()&&(null==(e=this.options)?void 0:e.projectId)&&(this.universalProviderInitPromise=this.initializeUniversalAdapter()),this.universalProviderInitPromise}async getUniversalProvider(){if(!this.universalProvider)try{await this.createUniversalProvider()}catch(e){y.EventsController.sendEvent({type:"error",event:"INTERNAL_SDK_ERROR",properties:{errorType:"UniversalProviderInitError",errorMessage:e instanceof Error?e.message:"Unknown",uncaught:!1}}),console.error("AppKit:getUniversalProvider - Cannot create provider",e)}return this.universalProvider}handleAlertError(e){let t=Object.entries(X.UniversalProviderErrors).find(t=>{let[,{message:n}]=t;return e.message.includes(n)}),[n,r]=null!=t?t:[],{message:a,alertErrorKey:o}=null!=r?r:{};if(n&&a&&!this.reportedAlertErrors[n]){let e=X.ALERT_ERRORS[o];e&&(d.AlertController.open(e,"error"),this.reportedAlertErrors[n]=!0)}}getAdapter(e){var t;if(e)return null==(t=this.chainAdapters)?void 0:t[e]}createAdapter(e){var t;if(!e)return;let n=e.namespace;n&&(this.createClients(),e.namespace=n,e.construct({namespace:n,projectId:null==(t=this.options)?void 0:t.projectId,networks:this.getCaipNetworks()}),this.chainNamespaces.includes(n)||this.chainNamespaces.push(n),this.chainAdapters&&(this.chainAdapters[n]=e))}async open(e){return(await this.injectModalUi(),(null==e?void 0:e.uri)&&n.ConnectionController.setUri(e.uri),(null==e?void 0:e.arguments)&&(null==e?void 0:e.view)==="Swap")?I.ModalController.open({...e,data:{swap:e.arguments}}):I.ModalController.open(e)}async close(){await this.injectModalUi(),I.ModalController.close()}setLoading(e,t){I.ModalController.setLoading(e,t)}async disconnect(e){await n.ConnectionController.disconnect(e)}getSIWX(){return o.OptionsController.state.siwx}getError(){return""}getChainId(){var e;return null==(e=h.ChainController.state.activeCaipNetwork)?void 0:e.id}async switchNetwork(e){let t=this.getCaipNetworks().find(t=>t.id===e.id);if(!t)return void d.AlertController.open(X.ALERT_ERRORS.SWITCH_NETWORK_NOT_FOUND,"error");await h.ChainController.switchActiveNetwork(t)}getWalletProvider(){return h.ChainController.state.activeChain?er.state.providers[h.ChainController.state.activeChain]:null}getWalletProviderType(){return er.getProviderId(h.ChainController.state.activeChain)}subscribeProviders(e){return er.subscribeProviders(e)}getThemeMode(){return L.ThemeController.state.themeMode}getThemeVariables(){return L.ThemeController.state.themeVariables}setThemeMode(e){L.ThemeController.setThemeMode(e),(0,F.setColorTheme)(L.ThemeController.state.themeMode)}setTermsConditionsUrl(e){o.OptionsController.setTermsConditionsUrl(e)}setPrivacyPolicyUrl(e){o.OptionsController.setPrivacyPolicyUrl(e)}setThemeVariables(e){L.ThemeController.setThemeVariables(e),(0,F.setThemeVariables)(L.ThemeController.state.themeVariables)}subscribeTheme(e){return L.ThemeController.subscribe(e)}getWalletInfo(){return t.AccountController.state.connectedWalletInfo}getAccount(e){var t;let n=r.ConnectorController.getAuthConnector(e),o=h.ChainController.getAccountData(e),s=h.ChainController.state.activeChain,l=w.StorageUtil.getConnectedConnectorId(e||s);if(o)return{allAccounts:o.allAccounts,caipAddress:o.caipAddress,address:a.CoreHelperUtil.getPlainAddress(o.caipAddress),isConnected:!!o.caipAddress,status:o.status,embeddedWalletInfo:n&&l===i.ConstantsUtil.CONNECTOR_ID.AUTH?{user:o.user?{...o.user,username:w.StorageUtil.getConnectedSocialUsername()}:void 0,authProvider:o.socialProvider||"email",accountType:null==(t=o.preferredAccountTypes)?void 0:t[e||s],isSmartAccountDeployed:!!o.smartAccountDeployed}:void 0}}subscribeAccount(e,t){let n=()=>{let n=this.getAccount(t);n&&e(n)};t?h.ChainController.subscribeChainProp("accountState",n,t):h.ChainController.subscribe(n),r.ConnectorController.subscribe(n)}subscribeNetwork(e){return h.ChainController.subscribe(t=>{let{activeCaipNetwork:n}=t;e({caipNetwork:n,chainId:null==n?void 0:n.id,caipNetworkId:null==n?void 0:n.caipNetworkId})})}subscribeWalletInfo(e){return t.AccountController.subscribeKey("connectedWalletInfo",e)}subscribeShouldUpdateToAddress(e){t.AccountController.subscribeKey("shouldUpdateToAddress",e)}subscribeCaipNetworkChange(e){h.ChainController.subscribeKey("activeCaipNetwork",e)}getState(){return R.PublicStateController.state}subscribeState(e){return R.PublicStateController.subscribe(e)}showErrorMessage(e){D.SnackController.showError(e)}showSuccessMessage(e){D.SnackController.showSuccess(e)}getEvent(){return{...y.EventsController.state}}subscribeEvents(e){return y.EventsController.subscribe(e)}replace(e){f.RouterController.replace(e)}redirect(e){f.RouterController.push(e)}popTransactionStack(e){f.RouterController.popTransactionStack(e)}isOpen(){return I.ModalController.state.open}isTransactionStackEmpty(){return 0===f.RouterController.state.transactionStack.length}static getInstance(){return this.instance}updateFeatures(e){o.OptionsController.setFeatures(e)}updateRemoteFeatures(e){o.OptionsController.setRemoteFeatures(e)}updateOptions(e){let t={...o.OptionsController.state||{},...e};o.OptionsController.setOptions(t)}setConnectMethodsOrder(e){o.OptionsController.setConnectMethodsOrder(e)}setWalletFeaturesOrder(e){o.OptionsController.setWalletFeaturesOrder(e)}setCollapseWallets(e){o.OptionsController.setCollapseWallets(e)}setSocialsOrder(e){o.OptionsController.setSocialsOrder(e)}getConnectMethodsOrder(){return W.WalletUtil.getConnectOrderMethod(o.OptionsController.state.features,r.ConnectorController.getConnectors())}addNetwork(e,t){if(this.chainAdapters&&!this.chainAdapters[e])throw Error("Adapter for namespace ".concat(e," doesn't exist"));let n=this.extendCaipNetwork(t,this.options);this.getCaipNetworks().find(e=>e.id===n.id)||h.ChainController.addNetwork(n)}removeNetwork(e,t){if(this.chainAdapters&&!this.chainAdapters[e])throw Error("Adapter for namespace ".concat(e," doesn't exist"));this.getCaipNetworks().find(e=>e.id===t)&&h.ChainController.removeNetwork(e,t)}constructor(e){this.chainNamespaces=[],this.remoteFeatures={},this.reportedAlertErrors={},this.getCaipNetwork=(e,t)=>{if(e){var n,r,a,o;let s=null==(r=h.ChainController.getNetworkData(e))||null==(n=r.requestedCaipNetworks)?void 0:n.find(e=>e.id===t);if(s)return s;let i=null==(a=h.ChainController.getNetworkData(e))?void 0:a.caipNetwork;return i||(null==(o=h.ChainController.getRequestedCaipNetworks(e).filter(t=>t.chainNamespace===e))?void 0:o[0])}return h.ChainController.state.activeCaipNetwork||this.defaultCaipNetwork},this.getCaipNetworkId=()=>{let e=this.getCaipNetwork();if(e)return e.id},this.getCaipNetworks=e=>h.ChainController.getCaipNetworks(e),this.getActiveChainNamespace=()=>h.ChainController.state.activeChain,this.setRequestedCaipNetworks=(e,t)=>{h.ChainController.setRequestedCaipNetworks(e,t)},this.getApprovedCaipNetworkIds=()=>h.ChainController.getAllApprovedCaipNetworkIds(),this.getCaipAddress=e=>h.ChainController.state.activeChain!==e&&e?h.ChainController.getAccountProp("caipAddress",e):h.ChainController.state.activeCaipAddress,this.setClientId=e=>{u.BlockchainApiController.setClientId(e)},this.getProvider=e=>er.getProvider(e),this.getProviderType=e=>er.getProviderId(e),this.getPreferredAccountType=e=>{var n;return null==(n=t.AccountController.state.preferredAccountTypes)?void 0:n[e]},this.setCaipAddress=(e,n)=>{t.AccountController.setCaipAddress(e,n),e&&o.OptionsController.state.enableEmbedded&&this.close()},this.setBalance=(e,n,r)=>{t.AccountController.setBalance(e,n,r)},this.setProfileName=(e,n)=>{t.AccountController.setProfileName(e,n)},this.setProfileImage=(e,n)=>{t.AccountController.setProfileImage(e,n)},this.setUser=(e,n)=>{t.AccountController.setUser(e,n)},this.resetAccount=e=>{t.AccountController.resetAccount(e)},this.setCaipNetwork=e=>{h.ChainController.setActiveCaipNetwork(e)},this.setCaipNetworkOfNamespace=(e,t)=>{h.ChainController.setChainNetworkData(t,{caipNetwork:e})},this.setAllAccounts=(e,n)=>{t.AccountController.setAllAccounts(e,n),o.OptionsController.setHasMultipleAddresses((null==e?void 0:e.length)>1)},this.setStatus=(e,n)=>{t.AccountController.setStatus(e,n),r.ConnectorController.isConnected()?w.StorageUtil.setConnectionStatus("connected"):w.StorageUtil.setConnectionStatus("disconnected")},this.getAddressByChainNamespace=e=>h.ChainController.getAccountProp("address",e),this.setConnectors=e=>{let t=[...r.ConnectorController.state.allConnectors,...e];r.ConnectorController.setConnectors(t)},this.setConnections=(e,t)=>{n.ConnectionController.setConnections(e,t)},this.fetchIdentity=e=>u.BlockchainApiController.fetchIdentity(e),this.getReownName=e=>b.getNamesForAddress(e),this.getConnectors=()=>r.ConnectorController.getConnectors(),this.getConnectorImage=e=>p.AssetUtil.getConnectorImage(e),this.setConnectedWalletInfo=(e,n)=>{let r=er.getProviderId(n),a=e?{...e,type:r}:void 0;t.AccountController.setConnectedWalletInfo(a,n)},this.getIsConnectedState=()=>!!h.ChainController.state.activeCaipAddress,this.addAddressLabel=(e,n,r)=>{t.AccountController.addAddressLabel(e,n,r)},this.removeAddressLabel=(e,n)=>{t.AccountController.removeAddressLabel(e,n)},this.getAddress=e=>h.ChainController.state.activeChain!==e&&e?h.ChainController.getAccountProp("address",e):t.AccountController.state.address,this.setApprovedCaipNetworksData=e=>h.ChainController.setApprovedCaipNetworksData(e),this.resetNetwork=e=>{h.ChainController.resetNetwork(e)},this.addConnector=e=>{r.ConnectorController.addConnector(e)},this.resetWcConnection=()=>{n.ConnectionController.resetWcConnection()},this.setAddressExplorerUrl=(e,n)=>{t.AccountController.setAddressExplorerUrl(e,n)},this.setSmartAccountDeployed=(e,n)=>{t.AccountController.setSmartAccountDeployed(e,n)},this.setSmartAccountEnabledNetworks=(e,t)=>{h.ChainController.setSmartAccountEnabledNetworks(e,t)},this.setPreferredAccountType=(e,n)=>{t.AccountController.setPreferredAccountType(e,n)},this.setEIP6963Enabled=e=>{o.OptionsController.setEIP6963Enabled(e)},this.handleUnsafeRPCRequest=()=>{this.isOpen()?this.isTransactionStackEmpty()||this.redirect("ApproveTransaction"):this.open({view:"ApproveTransaction"})},this.options=e,this.version=e.sdkVersion,this.caipNetworks=this.extendCaipNetworks(e),this.chainNamespaces=this.getChainNamespacesSet(e.adapters,this.caipNetworks),this.defaultCaipNetwork=this.extendDefaultCaipNetwork(e),this.chainAdapters=this.createAdapters(e.adapters),this.readyPromise=this.initialize(e)}}let eA=!1;class ef extends ew{async open(e){r.ConnectorController.isConnected()||await super.open(e)}async close(){await super.close(),this.options.manualWCControl&&n.ConnectionController.finalizeWcConnection()}async syncIdentity(e){return Promise.resolve()}async syncBalance(e){return Promise.resolve()}async injectModalUi(){if(!eA&&a.CoreHelperUtil.isClient()){if(await e.A(359390),await e.A(640236),!document.querySelector("w3m-modal")){let e=document.createElement("w3m-modal");o.OptionsController.state.disableAppend||o.OptionsController.state.enableEmbedded||document.body.insertAdjacentElement("beforeend",e)}eA=!0}}}function eE(e){return new ef({...e,basic:!0,sdkVersion:"html-core-".concat("1.7.8")})}e.i(803499)}]);